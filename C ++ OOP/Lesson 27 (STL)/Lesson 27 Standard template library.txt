üìö STL ‚Äî Standard Template Library

–ü–æ–º–∏–º–æ —Å–∞–º–æ–≥–æ —è–∑—ã–∫–∞, –≤ —Ä–µ–∑—é–º–µ C++ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ STL ‚Äî Standard Template Library.
–≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤, –≤—Ö–æ–¥—è—â–∞—è –ø—Ä—è–º–æ –≤ —è–∑—ã–∫.
–û–Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≥–æ—Ç–æ–≤—ã–µ, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è, –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö.

üí° STL ‚Äî —ç—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —á–∞—Å—Ç—å –∑–Ω–∞–Ω–∏–π –¥–ª—è –ª—é–±–æ–≥–æ C++ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.

üß© –ò–∑ —á–µ–≥–æ —Å–æ—Å—Ç–æ–∏—Ç STL

STL –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Ç—Ä–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —á–∞—Å—Ç–∏:

    Containers (–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã) ‚Äî –∫–ª–∞—Å—Å—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.

    Iterators (–∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã) ‚Äî ‚Äú—É–∫–∞–∑–∞—Ç–µ–ª–∏‚Äù, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞—Ç—å—Å—è –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.

    Algorithms (–∞–ª–≥–æ—Ä–∏—Ç–º—ã) ‚Äî –≥–æ—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏, –ø–æ–∏—Å–∫–∞, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–æ–¥—Å—á—ë—Ç–∞ –∏ —Ç.–¥.


üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã

–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ‚Äî —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞.
–ú—ã —É–∂–µ —Å—Ç–∞–ª–∫–∏–≤–∞–ª–∏—Å—å —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –∏–∑ –Ω–∏—Ö: string, vector, array, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–ª–∏ —Å–≤–æ–∏ (list, stack –∏ —Ç.–¥.).

–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–µ–ª—è—Ç—Å—è –Ω–∞ –¥–≤–µ –±–æ–ª—å—à–∏–µ –≥—Ä—É–ø–ø—ã:

üîπ –õ–∏–Ω–µ–π–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã


    array<int, 10> arr;      // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤ (—Ä–∞–∑–º–µ—Ä —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω)
    vector<int> vect;        // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤ (–º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä)
    string word;             // –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏–º–≤–æ–ª–æ–≤

    list<int> lst;           // –î–≤—É—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫
    forward_list<int> flist; // –û–¥–Ω–æ—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫

    stack<int> st;           // –°—Ç–µ–∫ (LIFO)
    queue<int> q;            // –û—á–µ—Ä–µ–¥—å (FIFO)
    priority_queue<int> pq;  // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ—á–µ—Ä–µ–¥—å (FIFO)
    deque<int> dq;           // –î–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è –æ—á–µ—Ä–µ–¥—å


üî∏ –ù–µ–ª–∏–Ω–µ–π–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    
    //Trees
    set<int> s;              // –ú–Ω–æ–∂–µ—Å—Ç–≤–æ (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã)
    map<int, string> m;      // –ê—Å—Å–æ—Ü–∏–∞—Ç–∏–≤–Ω—ã–π –º–∞—Å—Å–∏–≤ (–∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ)
    
    //Hash tables
    unordered_set<int> us;   // –ù–µ–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ
    unordered_map<int, string> um; // –ù–µ–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π map


üí° –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ STL

    ‚úÖ –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö
    ‚öôÔ∏è –í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–≤—Å—ë —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –Ω–∞ —à–∞–±–ª–æ–Ω–∞—Ö –∏    inline-—Ñ—É–Ω–∫—Ü–∏—è—Ö)
    üß† –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å ‚Äî –º–µ–Ω—å—à–µ —Ä—É—á–Ω–æ–≥–æ –∫–æ–¥–∞, –º–µ–Ω—å—à–µ –æ—à–∏–±–æ–∫
    üí¨ –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ—Å—Ç—å ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ –Ω–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö


üèÜ –í–æ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–π –≤—ã—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –ø—Ä–∏ —á–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ –≤ —è–∑—ã–∫–µ C++:

    1) string;
    2) vector;
    3) array;
    4) map;
    5) list;


üêå –ò—Ç–µ—Ä–∞—Ç–æ—Ä—ã

–¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–π–¥—ë–º –∫ —Ç–µ–º–µ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–≤.

–ò—Ç–µ—Ä–∞—Ç–æ—Ä—ã ‚Äî —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–µ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.

–ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –≤–µ–∫—Ç–æ—Ä —á–∏—Å–µ–ª, –∏ –Ω–∞–º –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω. –°–∞–º—ã–π –æ—á–µ–≤–∏–¥–Ω—ã–π —Å–ø–æ—Å–æ–± ‚Äî –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ã—á–Ω—ã–π —Ü–∏–∫–ª for —Å –∏–Ω–¥–µ–∫—Å–æ–º:

    vector<int> numbers = {11,33,55,22,44};
    for(int i = 0; i < numbers.size(); i++)
    {
        cout << numbers[i] << endl;
    }


üßë‚Äçüéì –í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –æ–∂–∏–¥–∞–ª–æ—Å—å ‚Äî –ø–æ–∫–∞ –º—ã –Ω–µ –∑–∞–º–µ–Ω–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä vector –Ω–∞ list. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ—Ç –∏–Ω–¥–µ–∫—Å–æ–≤ ‚Äî —ç—Ç–æ –Ω–µ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏.


üß© –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ ‚Äî –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã
–î–ª—è —Ç–∞–∫–∏—Ö —Å–ª—É—á–∞–µ–≤ –∏ –ø—Ä–∏–¥—É–º–∞–Ω—ã –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã.
–ö–∞–∂–¥—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–º–µ–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–∏–ø –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ (–≤–ª–æ–∂–µ–Ω–Ω—ã–π –∫–ª–∞—Å—Å), –Ω–æ –≤—Å–µ –æ–Ω–∏ —Ä–µ–∞–ª–∏–∑—É—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
–ë–ª–∞–≥–æ–¥–∞—Ä—è —ç—Ç–æ–º—É –º—ã –º–æ–∂–µ–º –æ–±—Ö–æ–¥–∏—Ç—å —Ä–∞–∑–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –µ–¥–∏–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º, –Ω–µ –º–µ–Ω—è—è –ª–æ–≥–∏–∫—É –∫–æ–¥–∞.

–£ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –µ—Å—Ç—å –¥–≤–∞ –±–∞–∑–æ–≤—ã—Ö –º–µ—Ç–æ–¥–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞–º–∏:

    begin() ‚Äî ‚Äú—É–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å‚Äù –Ω–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
    end() ‚Äî ‚Äú—É–º–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å‚Äù –Ω–∞ –æ–±–ª–∞—Å—Ç—å –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞


üîÅ  –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º —Å–≤–æ–π –ø–µ—Ä–≤—ã–π for —è –º–æ–≥—É –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞:

    for (auto iter = numbers.begin(); iter != numbers.end(); iter++)
    {
        cout << *iter << endl;
    }

–¢–µ–ø–µ—Ä—å —Ç–∞–∫–æ–π —Ü–∏–∫–ª –±—É–¥–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ –≤—Å–µ–º–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏ STL:

    //vector<int> numbers = {11,33,55,22,44};
    //list<int> numbers = {11,33,55,22,44};
    set<int> numbers = {11,33,55,22,44};

    for (auto iter = numbers.begin(); iter != numbers.end(); iter++)
    {
        cout << *iter << endl;
    }


üí° Range-based for
–í –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ —ç—Ç–æ–º—É –µ—Å—Ç—å —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Ç–∞–∫–æ–≥–æ —Ü–∏–∫–ª–∞ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º rfor. –ü–æ–¥ –∫–∞–ø–æ—Ç–æ–º –æ–Ω–∞ –¥–µ–ª–∞–µ—Ç –≤—Å–µ —Ç–æ, —á—Ç–æ –º—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ–ø–∏—Å–∞–ª–∏, –æ–¥–Ω–∞–∫–æ –≤—ã–≥–ª—è–¥–∏—Ç –≤—Å–µ —ç—Ç–æ –Ω–∞–º–∏–Ω–æ–≥–æ –ª–∞–∫–æ–Ω–∏—á–Ω–µ–µ:

    for(auto& item : numbers)
    {
        cout << item << endl;        
    }


üìò –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã –¥–∞—é—Ç –Ω–∞–º —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± —Ä–∞–±–æ—Ç—ã —Å –ª—é–±—ã–º–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ STL ‚Äî –±–µ–∑ –∏–Ω–¥–µ–∫—Å–æ–≤ –∏ –±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —Ç–∏–ø—É –∫–æ–ª–ª–µ–∫—Ü–∏–∏.


‚öôÔ∏è –ò—Ç–µ—Ä–∞—Ç–æ—Ä—ã ‚Äî –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ

–ò—Ç–µ—Ä–∞—Ç–æ—Ä—ã ‚Äî —ç—Ç–æ –æ–±—ã—á–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã-–∫–ª–∞—Å—Å—ã, —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ STL. –û–Ω–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–±—Ö–æ–¥–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –µ—ë —Ç–∏–ø–∞.

    auto iterator = numbers.begin();
–∏–ª–∏
    auto iterator = numbers.end();


üîπ –û—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
–ò—Ç–µ—Ä–∞—Ç–æ—Ä—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, —Ç–∞–∫–∏—Ö –∫–∞–∫:

    ++ / -- ‚Äî –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É / –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
    * ‚Äî —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ, –ø–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    -> ‚Äî –¥–æ—Å—Ç—É–ø –∫ —á–ª–µ–Ω–∞–º –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    [] ‚Äî –¥–æ—Å—Ç—É–ø –ø–æ –∏–Ω–¥–µ–∫—Å—É (—Ç–æ–ª—å–∫–æ –¥–ª—è random-access –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä  vector)

–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —á–µ—Ä–µ–∑ –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –Ω—É–∂–Ω–æ –µ–≥–æ —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞—Ç—å:

    auto iterator = numbers.begin();
    cout << *iterator << endl;

üîπ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞

–ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –∏—Ç–µ—Ä–∞—Ç–æ—Ä begin() —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞. –ú—ã –º–æ–∂–µ–º —Å–¥–≤–∏–≥–∞—Ç—å –µ–≥–æ:

    auto iterator = numbers.begin();
    iterator++;
    cout << *iterator << endl;

üí° –ò–º–µ–Ω–Ω–æ —Ç–∞–∫ –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç range-based for:
–æ–Ω —à–∞–≥ –∑–∞ —à–∞–≥–æ–º –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω–µ—Ç end() (–Ω–µ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).

üëâ –ò—Ç–æ–≥

    –ò—Ç–µ—Ä–∞—Ç–æ—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –ª—é–±—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π —Å –µ–¥–∏–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º.

    –û–Ω–∏ –ø–æ–¥—Ö–æ–¥—è—Ç –¥–ª—è list, vector, array, map –∏ –¥—Ä—É–≥–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ STL.

    –ë–ª–∞–≥–æ–¥–∞—Ä—è –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞–º, –∫–æ–¥ –æ–±—Ö–æ–¥–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º –æ—Ç —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.


üåÄ –í–∏–¥—ã –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ STL

–ò—Ç–µ—Ä–∞—Ç–æ—Ä—ã –¥–µ–ª—è—Ç—Å—è –Ω–∞ –¥–≤–µ –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:

    Input iterator ‚Äî –ø–æ–∑–≤–æ–ª—è—é—Ç —Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    Output iterator ‚Äî –ø–æ–∑–≤–æ–ª—è—é—Ç —Ç–æ–ª—å–∫–æ –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é

‚ö†Ô∏è –í —á–∏—Å—Ç–æ–º –≤–∏–¥–µ input –∏ output –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã –æ–±—ã—á–Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –Ω–∞–ø—Ä—è–º—É—é. –û–Ω–∏ —Å–ª—É–∂–∞—Ç –±–∞–∑–æ–≤—ã–º–∏ –¥–ª—è –±–æ–ª–µ–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–≤.

    Forward Iterator - –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∏–¥—Ç–∏ —Ç–æ–ª—å–∫–æ –≤–ø–µ—Ä–µ–¥ (–æ–ø–µ—Ä–∞—Ü–∏—è -- –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)

    Bidirectional Iterator - –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –∏ –≤–ø–µ—Ä–µ–¥ –∏ –Ω–∞–∑–∞–¥

    Random Access Iterator - –∏—Ç–µ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∑–∞–ª–µ–∑—Ç—å –≤ –ª—é–±—É—é —è—á–µ–π–∫—É (–æ–ø–µ—Ä–∞—Ü–∏—è [])

üîπ –ü—Ä–∏–º–µ—Ä—ã

Vector ‚Äî Random Access Iterator
–¢–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä –∏—Ç–µ—Ä–∞—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ vector —è–≤–ª—è–µ—Ç—Å—è –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–º —Ç–∏–ø–∞ Random Access

    vector<int> numbers = {11,33,55,22,44};
    auto it = numbers.begin();

    it += 3;     // —Å–¥–≤–∏–≥ –Ω–∞ 3 —ç–ª–µ–º–µ–Ω—Ç–∞ –≤–ø–µ—Ä—ë–¥
    it--;        // —à–∞–≥ –Ω–∞–∑–∞–¥
    cout << it[2]; // –¥–æ—Å—Ç—É–ø –∫ —ç–ª–µ–º–µ–Ω—Ç—É —á–µ—Ä–µ–∑ –∏–Ω–¥–µ–∫—Å


List ‚Äî Bidirectional Iterator
–ê –≤–æ—Ç –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Ç–∏–ø–∞ –ª–∏—Å—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Bidirectional iterator, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤–ø–µ—Ä–µ–¥ –∏ –Ω–∞–∑–∞–¥, –æ–¥–Ω–∞–∫–æ —Å—Ä–∞–∑—É –≤ —Å–µ—Ä–µ–¥–∏–Ω—É –æ–Ω –∑–∞–ª–µ–∑—Ç—å –Ω–µ –º–æ–∂–µ—Ç. –í –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ —ç—Ç–æ–º—É –Ω–µ–ª—å–∑—è –¥–µ–ª–∞—Ç—å –ø—Ä—ã–∂–∫–∏ –ø–æ 2 –∏–ª–∏ –ø–æ 3. –¢—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –µ–¥–∏–Ω–∏—á–Ω—ã–µ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –∏ –¥–µ–∫—Ä–µ–º–µ–Ω—Ç.

    list<int> numbers = {11,33,55,22,44};
    auto iterator = numbers.begin();
    iterator+=3; ‚ùå
    cout <<(iterator[2]); ‚ùå

Forward_list ‚Äî Forward Iterator
–í –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –∂–µ forward_list –æ—á–µ–≤–∏–¥–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Forward Iterator, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π —Ç–æ–ª—å–∫–æ –µ–¥–∏–Ω–∏—á–Ω—ã–π –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç.

    forward_list<int> numbers = {11,33,55,22,44};
    auto iterator = numbers.begin();
    iterator--; ‚ùå
    cout <<(iterator[2]); ‚ùå


üß† –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Ü–∏–∫–ª–∞ rfor –Ω—É–∂–Ω—ã –≤—Å–µ–≥–æ –ª–∏—à—å 2 –æ–ø–µ—Ä–∞—Ü–∏–∏: ++ –∏ *. –ü–æ —ç—Ç–æ–º—É –≤—Å–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Å –ª—é–±—ã–º –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–º –º–æ–∂–Ω–æ –æ–±–æ–π—Ç–∏ —Å –ø–æ–º–æ—â—å—é –¥–∞–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞.

üí° –ò—Ç–æ–≥:
–†–∞–∑–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã STL –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–º—è—Ç–∏ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏. –≠—Ç–∏ –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã –¥–∞—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º —Å–≤–æ–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏. –ó–Ω–∞–Ω–∏–µ —Ç–∏–ø–∞ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞ –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ö–æ–¥–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –∏–∑–±–µ–≥–∞—Ç—å –æ—à–∏–±–æ–∫ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.

–ü–æ–º–∏–º–æ –æ–±—ã–Ω—á—ã—Ö –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏—Ö –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, –∞ –∏–º–µ–Ω–Ω–æ:

1. Constant Iterators (cbegin, cend)

    –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —á—Ç–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –∑–∞–ø—Ä–µ—â–∞—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

    cbegin() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä –Ω–∞ –Ω–∞—á–∞–ª–æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏.

    cend() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä –Ω–∞ –∫–æ–Ω–µ—Ü –∫–æ–ª–ª–µ–∫—Ü–∏–∏ (—Å–ª–µ–¥—É—é—â–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º).

    vector<int> numbers = {1, 2, 3, 4};

    for(auto it = numbers.cbegin(); it != numbers.cend(); it++) {
        cout << *it << endl; // —á—Ç–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ
        // *it = 10; ‚ùå –∑–∞–ø—Ä–µ—â–µ–Ω–æ
    }

üí° –ü–æ–ª–µ–∑–Ω–æ, –∫–æ–≥–¥–∞ –º—ã —Ö–æ—Ç–∏–º –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —á—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è –Ω–µ –±—É–¥–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∞ –ø—Ä–∏ –æ–±—Ö–æ–¥–µ.

2. Reverse Iterators (rbegin, rend)

–ü–æ–∑–≤–æ–ª—è—é—Ç –æ–±—Ö–æ–¥–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

    rbegin() ‚Äî –∏—Ç–µ—Ä–∞—Ç–æ—Ä –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∫–æ–ª–ª–µ–∫—Ü–∏–∏.

    rend() ‚Äî –∏—Ç–µ—Ä–∞—Ç–æ—Ä –Ω–∞ –ø–æ–∑–∏—Ü–∏—é –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º.

    vector<int> numbers = {1, 2, 3, 4};

    for(auto it = numbers.rbegin(); it != numbers.rend(); it++) {
        cout << *it << " "; // –í—ã–≤–æ–¥: 4 3 2 1
    }

üí° –ó–∞–º–µ—Ç—å—Ç–µ, —á—Ç–æ —à–∞–≥ –æ—Å—Ç–∞–ª—Å—è —Ç–∞–∫–∏–º –∂–µ: it ++

3. Constant Reverse Iterators (crbegin, crend)

    –ö–æ–º–±–∏–Ω–∞—Ü–∏—è const –∏ reverse.
    –û–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —á—Ç–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –µ—ë –∏–∑–º–µ–Ω–µ–Ω–∏—è.

    for(auto it = numbers.crbegin(); it != numbers.crend(); it++) {
    cout << *it << " "; // —á—Ç–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ
    // *it = 10; ‚ùå –∑–∞–ø—Ä–µ—â–µ–Ω–æ
    }

üí° –≠—Ç–∏ –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã —É–¥–æ–±–Ω—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±—Ö–æ–¥–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.


üìö –≠—Ç–∏ –∏—Ç–µ—Ä–∞—Ç–æ—Ä—ã –æ—á–µ–Ω—å —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ STL –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º Algorithms. –≠—Ç–æ –Ω–∞–±–æ—Ä –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ñ-—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —É–ø—Ä–æ—â–∞—é—Ç —Ä–∞–±–æ—Ç—É —Å –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏: –¥–∞—é—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ —Ç.–¥. –ò –≤—Å–µ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞–º.