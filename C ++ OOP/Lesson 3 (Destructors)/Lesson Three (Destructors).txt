üß© –ß—Ç–æ —Ç–∞–∫–æ–µ –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞, –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –º–æ–º–µ–Ω—Ç —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞. –°–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ —Ç–æ—á–Ω–æ —Ç–∞–∫–æ–π –∂–µ –∫–∞–∫ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –æ–¥–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ - —Ç–∏–ª—å–¥—ã. –ù–∞ –ø—Ä–∏–º–µ—Ä–µ –≤—Å–µ —Ç–æ–π –∂–µ –º–∞—à–∏–Ω—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏ –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä:


    Car(string m, int y, int ms, int hp)
    {
        
        cout << "Constructor constructor called" << endl;
        SetModel(m);
        SetYear(y);
        SetMaxSpeed(ms);
        SetHorsePower(hp);
    }

    ~Car()
    {
        cout << "Destructor called" << endl;
    }

–ò —Ç–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–ª–∏–º –æ–±—ä–µ–∫—Ç –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏ –∑–∞–ø—É—Å—Ç–∏–º –∫–æ–¥:

    Car bmw = Car ("BMW", 2020, 250, 300);

–ù–∞ —ç–∫—Ä–∞–Ω–µ –º—ã —É–≤–∏–¥–∏–º –æ–±–∞ —ç—Ç–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è. –í –∫–∞–∫–æ–π –º–æ–º–µ–Ω—Ç –≤—ã–∑–≤–∞–ª—Å—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –º—ã —É–∂–µ –∑–Ω–∞–µ–º. –ù–∞ —Å–∞–º–û–π —Å—Ç—Ä–æ—á–∫–µ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—à–∏–Ω—ã. –ê –∫–æ–≥–¥–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä? –í –º–æ–º–µ–Ω—Ç –∫–æ–≥–¥–∞ –æ–±—ä–µ–∫—Ç bmw –ø–æ–∫–∏–¥–∞–µ—Ç —Å–≤–æ—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ - –∫–æ–≥–¥–∞ main –∑–∞–∫–æ–Ω—á–∏—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É. –ö–∞–∫ —ç—Ç–æ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:

    cout << "Start\n\n";

    if(true)
    {
        Car bmw = Car ("BMW", 2020, 250, 300);
    }

    cout <<"\n\nEnd\n\n";

–ú—ã —É–≤–∏–¥–∏–º –∑–¥–µ—Å—å Start -> Constructor -> Destructor -> End.

–¢.–µ. –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä - —ç—Ç–æ —Ñ-—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –º–æ–º–µ–Ω—Ç —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ –º—ã –º–æ–∂–µ–º –¥–æ–±–∞–≤–∏—Ç—å –≤ —ç—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É.

üîπ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞

    –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω.
    –£ –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –Ω–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
    –ï–≥–æ –º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —è–≤–Ω–æ (–∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ), –ª–∏–±–æ –Ω–µ –ø–∏—Å–∞—Ç—å –≤–æ–æ–±—â–µ ‚Äî —Ç–æ–≥–¥–∞ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—É—Å—Ç–æ–π –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä.

–í–æ–∑–Ω–∏–∫–∞–µ—Ç —Ä–µ–∑–æ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å - –∑–∞—á–µ–º –≤—Å–µ —ç—Ç–æ –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –∏ —á—Ç–æ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ–π –ª–æ–≥–∏–∫–µ.

üßë‚Äçüíª –ó–∞—á–µ–º –Ω—É–∂–µ–Ω –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä?

–ì–ª–∞–≤–Ω–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ ‚Äî –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –≤—ã–¥–µ–ª–µ–Ω—ã –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∂–∏–∑–Ω–∏ –æ–±—ä–µ–∫—Ç–∞.

–ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä new, —Ç–æ –≤ –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å delete. –ò–Ω–∞—á–µ –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç —É—Ç–µ—á–∫–∞ –ø–∞–º—è—Ç–∏.


–ü—Ä–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –ø—Ä–æ—Å—Ç–µ–π—à–µ–≥–æ –∫–ª–∞—Å—Å–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞ —É –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ—Ç –º–∞—Å—Å–∏–≤ –∏–∑ –µ–≥–æ –æ—Ü–µ–Ω–æ–∫.

üìö –ü—Ä–∏–º–µ—Ä: —Å—Ç—É–¥–µ–Ω—Ç –∏ –æ—Ü–µ–Ω–∫–∏

–ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º –∫–ª–∞—Å—Å —Å—Ç—É–¥–µ–Ω—Ç–∞, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ –æ—Ü–µ–Ω–æ–∫:

    class Student
    {
    private:
        string name;
        int* grades;
        int count;

    public:
        Student(string n, int c)
        {
            cout << "Constructor called" << endl;
            name = n;
            count = c;
            grades = new int[count]; // –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤
        }

        ~Student()
        {
            cout << "Destructor called" << endl;
            delete[] grades; // –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏
        }
    };


    int main()
    {
        Student s("Alex", 5);

        // –ó–¥–µ—Å—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤—ã–¥–µ–ª–∏–ª –ø–∞–º—è—Ç—å –ø–æ–¥ 5 –æ—Ü–µ–Ω–æ–∫
        // ...
        // –í –∫–æ–Ω—Ü–µ main –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∑–æ–≤–µ—Ç—Å—è –¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä
    }

–ò —Ç–µ–ø–µ—Ä—å –º—ã –º–æ–∂–µ–º –¥–∞–∂–µ —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –Ω–∞—à–µ–≥–æ –∫–ª–∞—Å—Å–∞ –ø—É—Ç–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –Ω–µ–≥–æ –Ω–æ–≤—ã—Ö –º–µ—Ç–æ–¥–æ–≤:

    // –ú–µ—Ç–æ–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ—Ü–µ–Ω–∫–∏
    void SetGrade(int index, int value)
    {
        if  ( 
                index >= 0 && index < count
                && 
                value >= 0 && value <= 100
            )
            grades[index] = value;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –æ—Ü–µ–Ω–æ–∫
    void PrintGrades()
    {
        cout << "Grades of " << name << ": ";
        for (int i = 0; i < count; i++)
            cout << grades[i] << " ";
        cout << endl;
    }

–ò –∏—Å–ø–æ–ª—å—â–æ–≤–∞—Ç—å –µ–≥–æ —Å–ª–µ–¥. –û–±—Ä–∞–∑–æ–º:

    int main()
    {
        cout << "Start\n\n";

        {
            Student s("Alex", 3);

            s.SetGrade(0, 90);
            s.SetGrade(1, 85);
            s.SetGrade(2, 100);

            s.PrintGrades();
        }

        cout << "\n\nEnd\n\n";
    }


üìù –ó–∞–¥–∞—á–∞: –ö–ª–∞—Å—Å ¬´–î—Ä–æ–±—å¬ª
üéØ –¶–µ–ª—å

–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å Fraction, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω—É—é –¥—Ä–æ–±—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ –Ω–∏–º–∏ —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã.

üîπ –ë–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π)

–°–æ–∑–¥–∞—Ç—å –∫–ª–∞—Å—Å Fraction —Å –ø–æ–ª—è–º–∏:

    numerator (—á–∏—Å–ª–∏—Ç–µ–ª—å),

    denominator (–∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å).

–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å:

    –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏\–∏–ª–∏ –±–µ–∑. –£—á–µ—Å—Ç—å, —á—Ç–æ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–µ–Ω 0. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ 1.

    Add(Fraction other)

    Subtract(Fraction other)

    Multiply(Fraction other)

    Divide(Fraction other)

–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É –≤ main, —Å–ª–æ–∂–∏–≤, —É–º–Ω–æ–∂–∏–≤, –≤—ã—á—Ç—è –∏ —Ä–∞–∑–¥–µ–ª–∏–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥—Ä–æ–±–µ–π.

–ü—Ä–∏–º–µ—Ä

int main()
{
    Fraction a(1, 2);   // 1/2
    Fraction b(3, 4);   // 3/4

    Fraction c = a.Add(b);  // 5/4
    Fraction d = a.Multiply(b); // 3/8

    cout << "a = "; a.Print();
    cout << "b = "; b.Print();
    cout << "a + b = "; c.Print();
    cout << "a * b = "; d.Print();

    return 0;
}

üèÜ –ë–æ–Ω—É—Å (+3 –∫—Ä–∏—Å—Ç–∞–ª–∞)

–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–ª–∞—Å—Å:

    –ú–µ—Ç–æ–¥ Simplify(), –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∫—Ä–∞—â–∞–µ—Ç –¥—Ä–æ–±—å (—Ç.–µ. –∏–∑ 6/8 –¥–µ–ª–∞–µ—Ç 3/4).
    
    –°–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã –∑–Ω–∞–∫ —Ö—Ä–∞–Ω–∏–ª—Å—è —Ç–æ–ª—å–∫–æ –≤ —á–∏—Å–ª–∏—Ç–µ–ª–µ 
        
        3/-4 –Ω–µ–≤–µ—Ä–Ω–æ, 
        -3/4  –≤–µ—Ä–Ω–æ
    
    –ï—Å–ª–∏ –¥—Ä–æ–±—å –ø–æ–ª—É—á–∞–µ—Ç—Å—è –≤–∏–¥–∞ -2/-4 ‚Üí –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ 1/2.

