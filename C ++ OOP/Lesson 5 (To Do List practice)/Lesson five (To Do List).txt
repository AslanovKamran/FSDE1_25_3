üìù –ü—Ä–∞–∫—Ç–∏–∫–∞ ToDoList

üßë‚Äçüíª –¢–µ–ø–µ—Ä—å –ø–æ–ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–µ—á—Ç–æ –±–æ–ª–µ–µ –ø–æ–ª–µ–∑–Ω–æ–µ, —á–µ–º –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–ª–∞—Å—Å—ã. –ê –∏–º–µ–Ω–Ω–æ ‚Äî —Å–¥–µ–ª–∞–µ–º —Å –≤–∞–º–∏ To Do List (—Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á).

–°–∞–º–æ–µ —Å–ª–æ–∂–Ω–æ–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ ‚Äî —ç—Ç–æ –ø—Ä–æ–¥—É–º—ã–≤–∞—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:

    –ò–∑ –∫–∞–∫–∏—Ö –∫–ª–∞—Å—Å–æ–≤ –æ–Ω–æ –±—É–¥–µ—Ç —Å–æ—Å—Ç–æ—è—Ç—å?

    –ö–∞–∫–∏–µ –ø–æ–ª—è –∏ –º–µ—Ç–æ–¥—ã –±—É–¥—É—Ç —É –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞?

    –ö–∞–∫ –∫–ª–∞—Å—Å—ã –±—É–¥—É—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –º–µ–∂–¥—É —Å–æ–±–æ–π?


1. –°–æ–∑–¥–∞—ë–º –∫–ª–∞—Å—Å –∑–∞–¥–∞—á–∏

–í–æ-–ø–µ—Ä–≤—ã—Ö, –Ω–∞–º –Ω—É–∂–µ–Ω –æ–±—ä–µ–∫—Ç –ó–∞–¥–∞—á–∞. –¢–æ, —á—Ç–æ –±—É–¥–µ—Ç –≤—Ö–æ–¥–∏—Ç—å –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á.

–ß—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —É –∑–∞–¥–∞—á–∏:

    –µ—ë –æ–ø–∏—Å–∞–Ω–∏–µ,
    —Å—Ç–∞—Ç—É—Å (Done / Not Done / Canceled –∏ —Ç. –ø.),
    –¥–µ–¥–ª–∞–π–Ω,
    –≤–∞–∂–Ω–æ—Å—Ç—å, –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.

–ù–∞—á–Ω—ë–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ: —É –∑–∞–¥–∞—á–∏ –±—É–¥–µ—Ç –≤—Å–µ–≥–æ –¥–≤–∞ –ø–æ–ª—è:

    description ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ,
    completed ‚Äî —Å—Ç–∞—Ç—É—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.

2. –î–∞–ª–µ–µ –ø–µ—Ä–µ–π–¥–µ–º –∫ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞–º. 
–ö–æ–≥–¥–∞ –º—ã —Å–æ–∑–¥–∞—ë–º –∑–∞–¥–∞—á—É, —É –Ω–µ—ë –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∏–º—è. –ó–Ω–∞—á–∏—Ç, –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä description.

–ù—É–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ true/false –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä? –î—É–º–∞—é, –Ω–µ—Ç. –õ–æ–≥–∏—á–Ω–æ, —á—Ç–æ –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –≤—Å–µ–≥–¥–∞ —Å–æ–∑–¥–∞—ë—Ç—Å—è –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π.

–ó–Ω–∞—á–∏—Ç:

    —Å–æ–∑–¥–∞—ë–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Å –æ–¥–Ω–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º desc,
    –ø–æ–ª–µ completed –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∫ false.

–¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º –º–µ—Ç–æ–¥—ã: –≥–µ—Ç—Ç–µ—Ä—ã, —Å–µ—Ç—Ç–µ—Ä—ã –∏ –ø–∞—Ä—É –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.


    class Task
    {
    private:

        string description;
        bool completed;

    public:

        Task(string desc)
        {
            description = desc;
            completed = false;
        }

        string getDescription()
        {
            return description;
        }
        bool isCompleted()
        {
            return completed;
        }

        void setDescription(string desc)
        {
            description = desc;
        }
        
        //No need for a setCompleted function, we can use markCompleted and markIncomplete instead

        void markCompleted()
        {
            completed = true;
        }
        void markIncomplete()
        {
            completed = false;
        }
        void display()
        {
            cout << (completed ? "[X] " : "[ ] ") << description << endl;
        }

    };


3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞—Å—Å Task
–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏–º–∏:

    int main()
    {
        Task t1 = Task("Feed the cat");
        t1.display();

        t1.markCompleted();
        t1.display();

        t1.markIncomplete();
        t1.display();

        Task wrong = Task() ‚ùå //Default ctor is not defined
        return 0;
    }

4. –°–æ–∑–¥–∞—ë–º –∫–ª–∞—Å—Å TaskList

üßë‚Äçüíª –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Å –í–∞–º–∏ –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –≤ —Å–µ–±–µ —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á. –ù–∞–∑–æ–≤–µ–º —ç—Ç–æ—Ç –∫–ª–∞—Å—Å TaskList. –û–Ω –±—É–¥–µ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –æ–ø–µ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ø–∏—Å–∫–æ–º –∏–∑ –∑–∞–¥–∞—á, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ, –æ—Ç–º–µ—Ç–∫–∞ –∑–∞–¥–∞—á –∏ —Ç.–ø. 

–ü–µ—Ä–µ–π–¥–µ–º –∫ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—é —Å—Ö–µ–º—ã –∑–∞—Ä–∞–Ω–µ–µ. –ú—ã –¥–æ–ª–∂–Ω—ã —Ö—Ä–∞–Ω–∏—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤ –∏–∑ –∑–∞–¥–∞—á, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –Ω–∞–º –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –∞–¥—Ä–µ—Å—Å, –≥–¥–µ –Ω–∞—à–∏ Task-–∏ –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è. –ò –≤ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ —ç—Ç–æ–º—É –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—á—Ç—å —Å–∫–æ–ª—å–∫–æ —Ç–∞–º –≤—Å–µ–≥–æ –∑–∞–¥–∞—á. –ü–æ —ç—Ç–æ–º—É —è —Ç–∞–∫–∂–µ –±—É–¥—É —Ö—Ä–∞–Ω–∏—Ç—å –ø–æ–ª–µ taskCount. 

    Task* tasks;
    int taskCount

–ü–µ—Ä–µ–π–¥–µ–º –∫ ctor –∏ dctor. –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä –º–Ω–µ –∑–¥–µ—Å—å –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è —Å—Ç–æ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤, —Ç–∞–∫ –∫–∞–∫ —è —Ä–∞–±–æ—Ç–∞—é —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç—å—é. –ê –≤ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ –º–æ–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å, —á—Ç–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω–∞—à —É–∫–∞–∑–∞—Ç–µ–ª—å —É–∫–∞–∑—ã–≤–∞–µ—Ç –≤–Ω–∏–∫—É–¥–∞ - nullptr –∏ taskCount —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ —Ä–∞–≤–µ–Ω –Ω—É–ª—é. –ü–æ–∫–∞, —á—Ç–æ –¥–æ–ø –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–æ–≤ –º–Ω–µ –Ω—É–∂–Ω–æ, –Ω–æ –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —è —Å–º–æ–≥—É –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å –∏ –ø–æ—Ç–æ–º.

    TaskList()
    {
        tasks = nullptr;
        taskCount = 0;
    }

    ~TaskList()
    {
        delete [] tasks;
    }

5. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
–¢–µ–ø–µ—Ä—å —Ä–∞–∑–±–µ—Ä–µ–º—Å—è —Å —Ç–µ–º –∫–∞–∫ –¥–æ–±–∞–≤–ª—è—Ç—å –∏–ª–∏ —É–¥–∞–ª—è—Ç—å –Ω–∞—à–∏ —Ç–∞—Å–∫–∏ –≤/–∏–∑ —Å–ø–∏—Å–∫–∞. –ù–∞—á–Ω–µ–º —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.

    void AddTask(Task t)
    {

    }

–ê –ª–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤ –æ—Ç—Å–∞—Ç–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω–æ–π. –Ø –¥–æ–ª–∂–µ–Ω –≤–∑—è—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤, —É–≤–µ–ª–∏—á–∏—Ç—å –µ–≥–æ —Ä–∞–∑–º–µ—Ä –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É, –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–Ω–µ—Ü –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —É–¥–∞–ª–∏—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Å—Ç–∞—Ä—ã–π –º–∞—Å—Å–∏–≤ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å—Å.

    void AddTask(Task t)
    {
        Task* temp = new Task[taskCount + 1];
    }

–ù–æ —É–∂–µ –Ω–∞ —ç—Ç–æ–º —ç—Ç–∞–ø–µ –º—ã –ø–æ–ª—É—á–∏–º –æ—à–∏–±–∫—É, –∫–æ—Ç–æ—Ä–∞—è –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ —É –∫–ª–∞—Å—Å–∞ Task –Ω–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –ü–æ—á–µ–º—É –≤–æ–∑–Ω–∏–∫–∞–µ—Ç —ç—Ç–∞ –æ—à–∏–±–∫–∞. –¢–∞–∫ –∫–∞–∫ –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–æ—á–∫–µ —è —Ö–æ—á—É —Å–æ–∑–¥–∞—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏, –≥–¥–µ –±—É–¥—É—Ç —Å–∏–¥–µ—Ç—å –º–æ–∏ —Ç–∞—Å–∫–∏. –ù–æ —Ç–∞–∫ –∫–∞–∫ —É –Ω–∞—Å –Ω–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, —è –Ω–∏–∫–∞–∫ –Ω–µ –º–æ–≥—É –¥–∞–∂–µ —Å–æ–∑–¥–∞—Ç—å —Å–∞–º –æ–±—ä–µ–∫—Ç —Ç–∞—Å–∫–∞. –Ø –º–æ–≥—É –µ–≥–æ —Å–æ–∑–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º Description. –ù–æ –∏ description —è –ø–µ—Ä–µ–¥–∞—Ç—å —Ç—É–¥–∞ –Ω–µ –º–æ–≥—É —Ç–∞–∫ –∫–∞–∫ —è –±—É–¥—É –∏—Ö –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–∑ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞—Å–∫–æ–≤. –î–ª—è —Ä–µ—à–µ–Ω–∏—è —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞—Ç—å Default ctor –≤ –∫–ª–∞—Å—Å–µ Task.

–ò —Ç–µ–ø–µ—Ä—å —è –º–æ–≥—É –∏–¥—Ç–∏ –¥–∞–ª—å—à–µ –∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–∞—Å–∫ –≤ —Å–≤–æ–π –º–∞—Å—Å–∏–≤

    void AddTask(Task t)
    {
        Task* temp = new Task[taskCount + 1];
        for (int i = 0; i < taskCount; i++)
        {
            temp[i] = tasks[i];
        }
        temp[taskCount] = t;
        delete[] tasks;
        tasks = temp;
        taskCount++;
    }


6. –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á
–ò –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –∑–∞–¥–∞—á –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–º –º–µ—Ç–æ–¥–æ–º

    void DisplayTasks()
    {
        for (int i = 0; i < taskCount; i++)
        {
            tasks[i].display();
        }
    }


7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã
–ò —É–∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—à main

    Task t1 = Task("Feed the cat");
    Task t2 = Task("Walk the dog");
    Task t3 = Task("Do the homework");

    TaskList myTasks;
    myTasks.AddTask(t1);
    myTasks.AddTask(t2);
    myTasks.AddTask(t3);


    myTasks.DisplayTasks();


–ú–æ–∂–Ω–æ –¥–∞–∂–µ –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ—Å—Ç–∏ —Ç–∞—Å–∫–∏:

    TaskList myTasks;
    int count = 0;

    cout << "How many tasks do you want to add? => ";
    cin >> count;
    for (size_t i = 0; i < count; i++)
    {
        cout << "Add tasks to your list => ";
        string desc;
        getline(cin, desc);

        myTasks.AddTask(Task(desc));
        cout << endl << endl;
    }

    myTasks.DisplayTasks();

–û–¥–Ω–∞–∫–æ –∑–¥–µ—Å—å –º—ã —Å –≤–∞–º–∏ —É–≤–∏–¥–∏–º –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ. –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —è –≤–≤–µ–ª –∫–æ-–≤–æ –∑–∞–¥–∞—á—å, –≤–≤–æ–¥ –ø–µ—Ä–≤–æ–π –∑–∞–¥–∞—á–∏ –±—É–¥—Ç–æ-–±—ã –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–ª—Å—è. –≠—Ç–æ —Å–≤—è–∑–∞–Ω–æ —Å –Ω–∞–∂–∞—Ç–∏–µ–º –∫–ª–∞–≤–∏—à–∏ enter.

üßê –ü—Ä–æ–±–ª–µ–º–∞
–í C++ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ —Å—á–∏—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:

    cin >> var; ‚Äî —Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–¥–Ω–æ —Å–ª–æ–≤–æ –∏–ª–∏ –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ (–¥–æ –ø—Ä–æ–±–µ–ª–∞, —Ç–∞–±–∞ –∏–ª–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏).

    getline(cin, str); ‚Äî —Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤—Å—é —Å—Ç—Ä–æ–∫—É, –≤–∫–ª—é—á–∞—è –ø—Ä–æ–±–µ–ª—ã, –¥–æ —Å–∏–º–≤–æ–ª–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ \n.

–ü—Ä–æ–±–ª–µ–º–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –∫–æ–≥–¥–∞ –º—ã —Å–º–µ—à–∏–≤–∞–µ–º —ç—Ç–∏ –¥–≤–∞ —Å–ø–æ—Å–æ–±–∞. –ù–∞–ø—Ä–∏–º–µ—Ä:
    int n;
    string s;

    cin >> n;
    getline(cin, s); // ‚ö†Ô∏è —Å—Ç—Ä–æ–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π!

–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:

    cin >> n —Å—á–∏—Ç—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–∏–º–≤–æ–ª –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ \n –≤ –±—É—Ñ–µ—Ä–µ –≤–≤–æ–¥–∞.
    –°–ª–µ–¥—É—é—â–∏–π getline() —Å—Ä–∞–∑—É –≤—Å—Ç—Ä–µ—á–∞–µ—Ç —ç—Ç–æ—Ç \n –∏ —Å—á–∏—Ç–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ –∫–æ–Ω–µ—Ü —Å—Ç—Ä–æ–∫–∏.

–í –∏—Ç–æ–≥–µ –º—ã –ø–æ–ª—É—á–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –≤–º–µ—Å—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ–≥–æ –≤–≤–æ–¥–∞.

–î–ª—è —Ä–µ—à–µ–Ω–∏—è —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã –≤ cin –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Ñ-—Ü–∏—è ignore() –∫–æ—Ç–æ—Ä–∞—è –æ—á–∏—â–∞–µ—Ç —Å–∏–º–≤–æ–ª—ã –∏–∑ –±—É—Ñ–µ—Ä–∞

    int n;
    string s;

    cin >> n;
    cin.ignore();        // —É–±–∏—Ä–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–π—Å—è '\n'
    getline(cin, s);     // —Ç–µ–ø–µ—Ä—å —Å—Ç—Ä–æ–∫–∞ –≤–≤–æ–¥–∏—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ

–ü–æ—ç—Ç–æ–º—É –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º –±—É–¥–µ—Ç —Ç–∞–∫–∞—è –∑–∞–ø–∏—Å—å

    TaskList myTasks;
    int count = 0;

    cout << "How many tasks do you want to add? => ";

    cin >> count;
    cin.ignore();
    //Rest of the code

üéØ –ü—Ä–∞–∫—Ç–∏–∫–∞. 
–î–æ–¥–µ–ª–∞—Ç—å –∫–ª–∞—Å—Å ToDoList.

1. –ú–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   
    –ù–∞–ø–∏—Å–∞—Ç—å –∫–æ–Ω—Å–æ–ª—å–Ω–æ–µ –º–µ–Ω—é, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è:
    –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
    –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É
    –û—Ç–º–µ—Ç–∏—Ç—å –∑–∞–¥–∞—á—É –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π
    –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫

2. –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ 
3. –î–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∏–ª–∏ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π (—á–µ—Ä–µ–∑ id –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞ –∏ –∏–∑–∏–º–µ–Ω–∏—Ç—å –µ–≥–æ —Å—Ç–∞—Ç—É—Å completed)
4. –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –ø–æ–ª–µ priority, –æ—Ç–≤–µ—á–∞—é—â–µ–µ –∑–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∑–∞–¥–∞—á. (–°–æ–∑–¥–∞—Ç—å enum —Å–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ (Regular, Urgent, Critical))
5. –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–¥–∞—á: —Å–Ω–∞—á–∞–ª–∞ –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∑–∞–¥–∞—á–∏ —Å –Ω–∞–∏–≤—ã—Å—à–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º.

üèÜ –î–æ–ø –∑–∞–¥–∞—á–∏:
–ú–µ—Ç–æ–¥ GetStats() ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∏ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.
–ú–µ—Ç–æ–¥ DisplayCompleted() ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏.
–ú–µ—Ç–æ–¥ DisplayNotCompleted() ‚Äî —Ç–æ–ª—å–∫–æ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ.
–ú–µ—Ç–æ–¥ ClearCompleted() ‚Äî –æ—á–∏—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç –≤—Å–µ—Ö –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º Completed.

üí° –î–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–ø –º–µ—Ç–æ–¥–∞ –Ω—É–∂–µ–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é.