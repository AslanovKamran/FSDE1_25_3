üìö –ë–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ

–û–¥–Ω–æ–π –∏–∑ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –¥–∞–Ω–Ω—ã—Ö —è–≤–ª—è—é—Ç—Å—è –¥–µ—Ä–µ–≤—å—è. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –º–∞—Å—Å–∏–≤–æ–≤, —Å—Ç–µ–∫–æ–≤ –∏ —Å–ø–∏—Å–∫–æ–≤ (–ª–∏–Ω–µ–π–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä), –¥–µ—Ä–µ–≤—å—è ‚Äî —ç—Ç–æ –Ω–µ–ª–∏–Ω–µ–π–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö (non-linear data structures).

üìå –õ–∏–Ω–µ–π–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö ‚Äî —ç—Ç–æ —Ç–∞–∫–∏–µ, –≥–¥–µ –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–æ–∂–Ω–æ –¥–æ–±—Ä–∞—Ç—å—Å—è, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–π–¥—è —á–µ—Ä–µ–∑ –ø—Ä–µ–¥—ã–¥—É—â–∏–π (–∏–ª–∏ —Å–ª–µ–¥—É—é—â–∏–π). –î–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è –º—ã —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª–∏ –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.

–ü—Ä–∏–º–µ—Ä–∞–º–∏ –∂–µ –Ω–µ–ª–∏–Ω–µ–π–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä –º–æ–≥—É—Ç –≤—ã—Å—Ç—É–ø–∞—Ç—å –¥–µ—Ä–µ–≤—å—è, –≥—Ä–∞—Ñ—ã, —Ö–µ—à-—Ç–∞–±–ª–∏—Ü—ã.

üå≥ –ß—Ç–æ —Ç–∞–∫–æ–µ –¥–µ—Ä–µ–≤–æ?
–≠—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∞—è —Å–æ–±–æ–π –∏–µ—Ä–∞—Ä—Ö–∏—é —É–∑–ª–æ–≤, –≥–¥–µ:
    
    –ü–µ—Ä–≤—ã–π —É–∑–µ–ª –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ—Ä–µ–Ω—å (root)
    –û—Ç –Ω–µ–≥–æ "—Ä–∞—Å—Ç—É—Ç" –≤–µ—Ç–≤–∏
    –£–∑–ª—ã, –Ω–µ –∏–º–µ—é—â–∏–µ –ø–æ—Ç–æ–º–∫–æ–≤, –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è –ª–∏—Å—Ç—å—è (leaves)

–û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å –¥–µ—Ä–µ–≤—å–µ–≤ ‚Äî –±—ã—Å—Ç—Ä—ã–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö. –ò–º–µ–Ω–Ω–æ –ø–æ —ç—Ç–æ–π –ø—Ä–∏—á–∏–Ω–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥–µ—Ä–µ–≤—å—è –≤ —Å–≤–æ–µ–π –æ—Å–Ω–æ–≤–µ.

üí° –î–µ–ª–æ –≤ —Ç–æ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –≤ –¥–µ—Ä–µ–≤–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –ø–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –∞–ª–≥–æ—Ä–∏—Ç–º—É, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –≤ –ø–æ—Ä—è–¥–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –∫–∞–∫ –≤ –æ–±—ã—á–Ω—ã—Ö (–Ω–µ–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö) –º–∞—Å—Å–∏–≤–∞—Ö. –ü—Ä–∏ –ø–æ–∏—Å–∫–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –≤—ã–ø–æ–ª–Ω—è—Ç—å –ª–∏–Ω–µ–π–Ω—ã–π –ø–æ–∏—Å–∫, —á—Ç–æ –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è O(n). –ü—Ä–∏ –æ—á–µ–Ω—å –±–æ–ª—å—à–∏—Ö –º–∞—Å—Å–∏–≤–∞—Ö —ç—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∫—Ä–∞–π–Ω–µ –Ω–µ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º.

üßë‚Äçüíª –ò –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –ø—Ä–æ–±–ª–µ–º—ã –±—ã–ª–∏ –ø—Ä–∏–¥—É–º–∞–Ω—ã –¥–µ—Ä–µ–≤—å—è.

–ü–ª—é—Å—ã –∏ –º–∏–Ω—É—Å—ã –¥–µ—Ä–µ–≤—å–µ–≤

‚úÖ –ü–ª—é—Å—ã:
- üîç –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–ø–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(log n) –≤ —Å—Ä–µ–¥–Ω–µ–º —Å–ª—É—á–∞–µ).

‚ùå –ú–∏–Ω—É—Å—ã:
- üö´ –ù–µ–ª—å–∑—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —ç–ª–µ–º–µ–Ω—Ç—É –ø–æ –∏–Ω–¥–µ–∫—Å—É, –∫–∞–∫ –≤ –º–∞—Å—Å–∏–≤–µ.
- ‚öôÔ∏è –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–æ–∂–Ω–µ–µ, —á–µ–º —É —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –º–∞—Å—Å–∏–≤–∞.


üß© –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞

–ö–∞–∫ —É–∂–µ –±—ã–ª–æ —Å–∫–∞–∑–∞–Ω–æ, –≤ –±–∏–Ω–∞—Ä–Ω–æ–º –¥–µ—Ä–µ–≤–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å –≤ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
- —Å–ª–µ–≤–∞ –æ—Ç —É–∑–ª–∞ ‚Äî –∑–Ω–∞—á–µ–Ω–∏—è –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ,
- —Å–ø—Ä–∞–≤–∞ ‚Äî –∑–Ω–∞—á–µ–Ω–∏—è –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω—ã —Ç–µ–∫—É—â–µ–º—É.

–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—á–µ—Ä–Ω–∏—Ö —É–∑–ª–æ–≤ ‚Äî 2, –∏–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É —Ç–∞–∫–æ–µ –¥–µ—Ä–µ–≤–æ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –±–∏–Ω–∞—Ä–Ω—ã–º –¥–µ—Ä–µ–≤–æ–º –ø–æ–∏—Å–∫–∞ (Binary Search Tree, BST).

–ù–∞–ø—Ä–∏–º–µ—Ä


              11
            /    \
          6       19
        /  \     /   \
      4     8   17    43
       \     \        /  \
        5     10     31   49


–ò –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–∞–Ω–Ω–∞—è –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç—å –æ–±—è–∑–∞–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è. 

üí° –í –±–∏–Ω–∞—Ä–Ω–æ–º –¥–µ—Ä–µ–≤–µ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã.

üëÄ –ü–æ—á–µ–º—É –ø–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ - –¥–µ–ª–æ –≤ —Ç–æ–º, —á—Ç–æ –∑–¥–µ—Å—å –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –º–æ–∂–Ω–æ –æ–±—Ä—É–±–∞—Ç—å —á–∞—Å—Ç—å –≤–µ—Ç–≤–µ–π. –í—Ö–æ–¥ –≤ –¥–µ—Ä–µ–≤–æ –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑ –µ–≥–æ –∫–æ—Ä–Ω—è, –∏ –¥–∞–ª–µ–µ –∏—Å—Ö–æ–¥—è –∏–∑ –∑–Ω–∞—á–µ–Ω–∏—è –∏—Å–∫–æ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–æ–∂–Ω–æ –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø—Ä–∞–≤–æ (–µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –∏—Å–∫–æ–º–æ–≥–æ –±–æ–ª—å—à–µ —á–µ–º —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª) –∏–ª–∏ –≤–ª–µ–≤–æ (–µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ–Ω—å—à–µ). 

–ù–∞–ø—Ä–∏–º–µ—Ä –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–∏—Å–ª–æ 17. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∑–∞ 3 —à–∞–≥–∞:

    11 -> 19 -> 17

–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –Ω–∞–π—Ç–∏ —á–∏—Å–ª–æ 46:
    
    11 -> 19 -> 43 -> 46  -> ‚ùå

–ò –∑–∞ 4 —à–∞–≥–∞ –º–æ–∂–Ω–æ –ø–æ–Ω—è—Ç—å, —á—Ç–æ –¥–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –Ω–µ—Ç. –í —Å–ª—É—á–∞–µ –º–∞—Å—Å–∏–≤–æ–≤ –º–Ω–µ –ø—Ä–∏—à–ª–æ—Å—å –±—ã –ø—Ä–æ–π—Ç–∏—Å—å –¥–æ —Å–∞–º–æ–≥–æ –∫–æ–Ω—Ü–∞ —Å–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è –≤ –µ–≥–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏.


üë®‚Äçüéì –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –≤ C++
–î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä–µ–º—Å—è –∏–∑ —á–µ–≥–æ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∞—à —É–∑–µ–ª. –ö–∞–∫ –∏ –≤ —Å–ª—É—á–∞–µ —Å–æ —Å–ø–∏—Å–∫–æ–º, –∑–¥–µ—Å—å –º—ã –¥–æ–ª–∂–Ω—ã —Ö—Ä–∞–Ω–∏—Ç—å —á—Ç–æ-—Ç–æ —Ç–∏–ø–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç, –æ–¥–Ω–∞–∫–æ –≤ –¥–µ—Ä–µ–≤—å—è—Ö –Ω–µ—Ç –ø–æ–Ω—è—Ç–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞. –í–æ–∑—å–º–µ–º –∑–∞ –æ—Å–Ω–æ–≤—É –Ω–∞–ø—Ä–∏–º–µ—Ä —É–∑–µ–ª —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º 6 (—Ç–∞–∫ –∫–∞–∫ –æ–Ω —Å–∞–º—ã–π –ø–æ–ª–Ω—ã–π). –ú–æ–∂–Ω–æ –∑–∞–º–µ—Ç–∏—Ç—å, —á—Ç–æ —Å–∞–º —É–∑–µ–ª —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –∑–Ω–∞—á–µ–Ω–∏–µ (6) —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ª–µ–≤—ã–π (4) –∏ –ø—Ä–∞–≤—ã–π(8) —É–∑–ª—ã, –∞ —Ç–∞–∫ –∂–µ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ä–æ–¥–∏—Ç–µ–ª—è (11).

–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –∫–∞–∂–¥—ã–π —É–∑–µ–ª –º–æ–∂–Ω–æ –æ–ø–∏—Å–∞—Ç—å –≤–æ—Ç —Ç–∞–∫:

    class Node
    {
    public:
        int data;

        Node* parent = nullptr;
        Node* left = nullptr;
        Node* right = nullptr;
    };

üå≥ –ö–ª–∞—Å—Å –¥–µ—Ä–µ–≤–∞

–î–µ—Ä–µ–≤–æ –¥–æ–ª–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –∫–æ—Ä–µ–Ω—å, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤—Å—Ç–∞–≤–∫–∞, —É–¥–∞–ª–µ–Ω–∏–µ –∏ —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:

    class BinaryTree
    {
    private:
        Node* root = nullptr;

    public:
        // –í—Å—Ç–∞–≤–∫–∞, —É–¥–∞–ª–µ–Ω–∏–µ, –ø–æ–∏—Å–∫ –∏ —Ç.–¥.
    };


üîé –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ (search)
–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–∞–ª–∏–∑—É–µ–º –º–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, –∏ nullptr, –µ—Å–ª–∏ –Ω–µ—Ç.

üß† –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –Ω—É–∂–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å 2 –æ—á–µ–≤–∏–¥–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏:

1. –ï—Å–ª–∏ root = nullptr, —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –Ω–∏–∫–∞–∫–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –≤–æ–æ–±—â–µ –Ω–µ—Ç, —Ç.–µ. –Ω–µ—Ç –∏ –∏—Å–∫–æ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞. –í–µ—Ä–Ω–µ–º nullptr.

2. –ï—Å–ª–∏ –∏—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç - —ç—Ç–æ —Å–∞–º –∫–æ—Ä–µ–Ω—å - —Ç.–µ. –º—ã –µ–≥–æ –Ω–∞—à–ª–∏ —Å—Ä–∞–∑—É –∏ –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å—Å—è –≤ –≥–ª—É–±—å –¥–µ—Ä–µ–≤–∞. –í–µ—Ä–Ω–µ–º —Å–∞–º –∫–æ—Ä–µ–Ω—å.

    Node* search(int data)
    {
        if(root == nullptr)
            return nullptr;
        
        if(root->data == data)
            return root;
    }

üõ† –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞:

–ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–æ—Ä–Ω–µ, –Ω—É–∂–Ω–æ –∏–¥—Ç–∏ –≤–≥–ª—É–±—å –¥–µ—Ä–µ–≤–∞:
1. –ï—Å–ª–∏ –∏—Å–∫–æ–º–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ –∫–æ—Ä–Ω—è - –∏–¥–µ–º –Ω–∞–ª–µ–≤–æ
2. –ï—Å–ª–∏ –∏—Å–∫–æ–º–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –∫–æ—Ä–Ω—è - –∏–¥–µ–º –Ω–∞–ø—Ä–∞–≤–æ


    Node* search(int data)
    {
        if(root == nullptr)
            return nullptr;
        
        if(root->data == data)
            return root;
        
        else if(data > root->data)
        {
            //Moving right
        }
        else if(data < root->data)
        {
            //Moving left
        }
    }

–ö–∞–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≤–æ–∑–º–æ–∂–Ω—ã —Ç—É—Ç: —Ç–∞–∫ –∫–∞–∫ —è —Å–µ–π—á–∞—Å –±—É–¥—É –ø—Ä–æ–¥–≤–∏–≥–∞—Ç—å—Å—è –≤–≥–ª—É–±—å –¥–µ—Ä–µ–≤–∞, —è —Ö–æ—á—É –∑–∞–≤–µ—Å—Ç–∏ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é current –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ –Ω–∞ –æ–¥–∏–Ω —Ç–æ –Ω–∞ –¥—Ä—É–≥–æ–π —É–∑–µ–ª. –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –æ–Ω –±—É–¥–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ root, –∞ –ø–æ—Ç–æ–º, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ª–æ–≤–∏–π –æ–Ω –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å—Å—è. –ú–µ–Ω—è—Ç—å –∫–æ—Ä–µ–Ω—å —è —Å–µ–±–µ –Ω–µ –º–æ–≥—É –ø–æ–∑–≤–æ–ª–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –º–æ–∂–µ—Ç –Ω–∞—Ä—É—à–∏—Ç—å –ª–æ–≥–∏–∫—É –≤—Å–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.

–î–∞–ª–µ–µ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –Ω—É–∂–Ω–æ–≥–æ –º–Ω–µ —É–∑–ª–∞ –º–Ω–µ –Ω—É–∂–µ–Ω —Ü–∏–∫–ª

    Node* search(int data)
    {
        Node* current = root;
        while(true)
        {

            if(current == nullptr)
                return nullptr;

            if(current->data == data)
                return current;

            else if(data > current->data)
            {
                //Moving right
                current = current->right;
            }
            else if(data < current->data)
            {
                //Moving left
                current = current->left;
            }
        }
    }

‚ö†Ô∏è –¢–∞–∫ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –¥–æ–≤–æ–ª—å–Ω–æ –æ–ø–∞—Å–Ω–æ –º–æ–∂–Ω–æ –æ—Ç –Ω–µ–≥–æ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –∏ –ø—Ä–æ–ø–∏—Å–∞–≤ –≤ –Ω–µ–º —É—Å–ª–æ–≤–∏–µ –≤—ã—Ö–æ–¥–∞:

    Node* search(int data)
    {
        Node* current = root;

        while(current != nullptr)
        {
            if(current->data == data)
                return current;

            //Moving right
            else if(data > current->data)
                current = current->right;

            //Moving left
            else 
                current = current->left;
        }

        //In case node not found
        return nullptr;
    }


üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞
–ê–ª–≥–æ—Ä–∏—Ç–º –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –≤–∏–∑—É–∞–ª—å–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ –¥–µ—Ä–µ–≤–∞ –≤—ã—à–µ, –∏—Å–ø–æ–ª—å–∑—É—è –¥–≤–∞ –∫–µ–π—Å–∞:

    –ï—Å–ª–∏ —É–∑–µ–ª –µ—Å—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 17)
    –ï—Å–ª–∏ —É–∑–ª–∞ –Ω–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, 46)

–í –æ–±–æ–∏—Ö —Å–ª—É—á–∞—è—Ö –ø–æ–∏—Å–∫ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å —à–∞–≥ –∑–∞ —à–∞–≥–æ–º, "—Å–ø—É—Å–∫–∞—è—Å—å" –ø–æ –¥–µ—Ä–µ–≤—É –æ—Ç –∫–æ—Ä–Ω—è –∫ –Ω—É–∂–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É.

 
‚åö –í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º –¥–µ—Ä–µ–≤–µ

–î–∞–≤–∞–π—Ç–µ —Ä–∞–∑–±–µ—Ä—ë–º—Å—è, –Ω–∞—Å–∫–æ–ª—å–∫–æ –±—ã—Å—Ç—Ä–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–∏—Å–∫ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º –¥–µ—Ä–µ–≤–µ.

–í –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–º –≤—ã—à–µ –ø—Ä–∏–º–µ—Ä–µ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ª—é–±–æ–π —ç–ª–µ–º–µ–Ω—Ç (–∏–ª–∏ —É–±–µ–¥–∏—Ç—å—Å—è –≤ –µ–≥–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏), –º–Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –º–∞–∫—Å–∏–º—É–º 4 —à–∞–≥–∞ ‚Äî –æ—Ç –∫–æ—Ä–Ω—è –¥–æ –ª–∏—Å—Ç–∞. –≠—Ç–æ –∏ –±—É–¥–µ—Ç —Ö—É–¥—à–∏–π —Å–ª—É—á–∞–π –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞. –í —Ç–æ –∂–µ –≤—Ä–µ–º—è, –µ—Å–ª–∏ –±—ã –º—ã –∏—Å–∫–∞–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –æ–±—ã—á–Ω–æ–º –Ω–µ—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ, —Ö—É–¥—à–∏–π —Å–ª—É—á–∞–π –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª –±—ã –ø—Ä–æ–π—Ç–∏ –≤—Å–µ 11 —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

üìå –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –≤ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –¥–µ—Ä–µ–≤–µ –ø–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ–ª–µ–Ω–∏—è (–∫–∞–∫ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º –ø–æ–∏—Å–∫–µ), –∏ –µ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç:

O(log_2‚ÄØn) ‚Äî –≤ —Å—Ä–µ–¥–Ω–µ–º –∏ –ª—É—á—à–µ–º —Å–ª—É—á–∞–µ.

‚ö†Ô∏è –ù–æ –µ—Å—Ç—å –≤–∞–∂–Ω—ã–π –Ω—é–∞–Ω—Å

–°–∫–æ—Ä–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ –Ω–∞–ø—Ä—è–º—É—é –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–µ—Ä–µ–≤–∞. –°—É—â–µ—Å—Ç–≤—É—é—Ç –¥–≤–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–∞:

    ‚úÖ –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –¥–µ—Ä–µ–≤–æ ‚Äî –ø—Ä–∏–º–µ—Ä–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤ –≤ –ª–µ–≤–æ–π –∏ –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ –¥–µ—Ä–µ–≤–∞. –ì–ª—É–±–∏–Ω–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞.

    ‚ùå –ù–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ (–∏–ª–∏ —Å–º–µ—â—ë–Ω–Ω–æ–µ) –¥–µ—Ä–µ–≤–æ ‚Äî –≤—Å–µ —É–∑–ª—ã ¬´—É—Ö–æ–¥—è—Ç¬ª –≤ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ–ª—å–∫–æ –≤–ø—Ä–∞–≤–æ).

üîΩ –ü—Ä–∏–º–µ—Ä —Å–º–µ—â—ë–Ω–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞, –µ—Å–ª–∏ –±—ã –∫–æ—Ä–Ω–µ–º –±—ã–ª –≤—ã–±—Ä–∞–Ω —ç–ª–µ–º–µ–Ω—Ç 4:
    4
        5
            6   
                8
                    11
                        17
                            19
                                31
                                    43
                                        49

–¢–∞–∫–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ —Å—É—Ç–∏ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –æ–¥–Ω–æ—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫. –ó–¥–µ—Å—å –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —è –±—É–¥—É –∫–∞–∂–¥—ã–π —Ä–∞–∑ –¥–≤–∏–≥–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É, –ø–æ–∫–∞ –Ω–µ –¥–æ–π–¥—É –¥–æ –Ω—É–∂–Ω–æ–≥–æ —É–∑–ª–∞ –∏–ª–∏ –∫–æ–Ω—Ü–∞ –¥–µ—Ä–µ–≤–∞.

üìâ –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Å–∫–æ—Ä–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ —Ä–µ–∑–∫–æ –ø–∞–¥–∞–µ—Ç, –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è:

O(n) ‚Äî –≤ —Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ, –ø—Ä–∏ —Å–∏–ª—å–Ω–æ –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ.

‚úÖ –í—ã–≤–æ–¥

–í –∏–¥–µ–∞–ª—å–Ω–æ–º (—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–º) –¥–µ—Ä–µ–≤–µ:
üîç –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ O(log_2‚ÄØn)

–í –Ω–∞–∏—Ö—É–¥—à–µ–º —Å–ª—É—á–∞–µ (—Å–º–µ—â—ë–Ω–Ω–æ–º –¥–µ—Ä–µ–≤–µ):
üê¢ –ü–æ–∏—Å–∫ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å O(n)
                    

–¢–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä –º–∞–∫—Å–∏–º—É–º –∑–∞ 20 —à–∞–≥–æ–≤ —è –º–æ–≥—É –Ω–∞–π—Ç–∏ –∏—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –¥–µ—Ä–µ–≤–µ –∏–∑ –º–∏–ª–ª–∏–æ–Ω–∞ —É–∑–ª–æ–≤.

üìå –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–π–¥—ë–º –∫ –∞–ª–≥–æ—Ä–∏—Ç–º—É –≤—Å—Ç–∞–≤–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–∞

–î–ª—è –≤—Å—Ç–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–º–æ–∂–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞ ‚Äî –≤–µ–¥—å —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –º–µ—Å—Ç–æ –¥–ª—è –Ω–æ–≤–æ–≥–æ —É–∑–ª–∞.

–ö–∞–∫ –º—ã –±—É–¥–µ–º –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å?

1. –ù–∞—á–∏–Ω–∞–µ–º —Å –∫–æ—Ä–Ω—è ‚Äî —É–∑–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ 11.

2. –ü–æ—Å–∫–æ–ª—å–∫—É —É 11 —É–∂–µ –µ—Å—Ç—å –∏ –ª–µ–≤—ã–π, –∏ –ø—Ä–∞–≤—ã–π –ø–æ—Ç–æ–º–∫–∏, –≤—Å—Ç–∞–≤–∏—Ç—å 18 –ø—Ä—è–º–æ –ø–æ–¥ –∫–æ—Ä–µ–Ω—å –Ω–µ–ª—å–∑—è.

3. –¢–∞–∫ –∫–∞–∫ 18 –±–æ–ª—å—à–µ 11, –¥–≤–∏–≥–∞–µ–º—Å—è –≤–ø—Ä–∞–≤–æ ‚Äî –∫ —É–∑–ª—É 19.

4. –£ —É–∑–ª–∞ 19 —Ç–æ–∂–µ –µ—Å—Ç—å –ª–µ–≤—ã–π –∏ –ø—Ä–∞–≤—ã–π –ø–æ—Ç–æ–º–∫–∏, –∑–Ω–∞—á–∏—Ç, –≤—Å—Ç–∞–≤–∏—Ç—å 18 –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–æ–¥ 19 –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.

5. –¢–∞–∫ –∫–∞–∫ 18 –º–µ–Ω—å—à–µ 19, –¥–≤–∏–≥–∞–µ–º—Å—è –Ω–∞–ª–µ–≤–æ ‚Äî –∫ —É–∑–ª—É 17.

6. –£ —É–∑–ª–∞ 17 –Ω–µ—Ç –ø—Ä–∞–≤–æ–≥–æ –ø–æ—Ç–æ–º–∫–∞ ‚Äî –∑–Ω–∞—á–∏—Ç, –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —É–∑–µ–ª —Å –¥–∞–Ω–Ω—ã–º–∏ 18 –≤ –ø–æ–ª–µ right.

üß† –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –∞–ª–≥–æ—Ä–∏—Ç–º –≤—Å—Ç–∞–≤–∫–∏ ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –ø–æ–∏—Å–∫–∞ —Å —à–∞–≥–æ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —É–∑–ª–∞ –≤ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø—É—Å—Ç–æ–µ –º–µ—Å—Ç–æ.

üìå –î–ª—è –≤—Å—Ç–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–π—Ç–∏ —É–∑–µ–ª-—Ä–æ–¥–∏—Ç–µ–ª—å, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –º—ã —Å–º–æ–∂–µ–º –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –Ω–∞—à –Ω–æ–≤—ã–π —É–∑–µ–ª ‚Äî –ª–∏–±–æ —Å–ª–µ–≤–∞, –ª–∏–±–æ —Å–ø—Ä–∞–≤–∞.

–ü–æ —Å—É—Ç–∏, –º—ã –Ω–µ –∏—â–µ–º —Å–∞–º —Ü–µ–ª–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç (–≤–µ–¥—å –µ–≥–æ –µ—â—ë –Ω–µ—Ç –≤ –¥–µ—Ä–µ–≤–µ), –∞ –Ω–∞—Ö–æ–¥–∏–º —Ç—É –ø–æ–∑–∏—Ü–∏—é, –≥–¥–µ –æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è, –µ—Å–ª–∏ –±—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª. –ò –∏–º–µ–Ω–Ω–æ –≤ —ç—Ç–æ –º–µ—Å—Ç–æ –º—ã –µ–≥–æ –≤—Å—Ç–∞–≤–ª—è–µ–º.

–í –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—Å—Ç–∞–≤–∫–∏ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—á—Ç–∏ —Ç–æ—Ç –∂–µ –ø–æ–¥—Ö–æ–¥, —á—Ç–æ –∏ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: –¥–≤–∏–≥–∞–µ–º—Å—è –ø–æ –¥–µ—Ä–µ–≤—É –æ—Ç –∫–æ—Ä–Ω—è, —Å—Ä–∞–≤–Ω–∏–≤–∞—è –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Å—Ç–∞–≤–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å —Ç–µ–∫—É—â–∏–º–∏ —É–∑–ª–∞–º–∏. –ö–æ–≥–¥–∞ –¥–æ—Ö–æ–¥–∏–º –¥–æ –ø—É—Å—Ç–æ–π —è—á–µ–π–∫–∏ (nullptr), –º—ã –ø–æ–Ω–∏–º–∞–µ–º, —á—Ç–æ —ç—Ç–æ –º–µ—Å—Ç–æ –¥–ª—è –Ω–æ–≤–æ–≥–æ —É–∑–ª–∞.

–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –≤–æ—Ç –ø–æ–ª–Ω—ã–π –º–µ—Ç–æ–¥ –≤—Å—Ç–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —É–∑–ª–∞.

    void insert(const int data)
    {

        Node* newNode = new Node;

        newNode->data = data;
        
        newNode->left = nullptr;
        newNode->right = nullptr;
        newNode->parent = nullptr;

        // If tree is empty, new node becomes root
        if (root == nullptr)
        {
            root = newNode;
            return;
        }

        Node* current = root;
        Node* parent = nullptr;

        while(current != nullptr)
        {
            parent = current;

            if(current->data == data)
            {
                cout << "Cannot insert duplicate value" << endl;
                delete newNode;
                return;
            }

            else if(data > current->data)
                current = current->right;

            else 
                current = current->left;
        }

        //Now we got the parent.
        if(data > parent->data)
        {
            parent->right = newNode;
            newNode->parent = parent;
        }
        else
        {
            parent->left = newNode;
            newNode->parent = parent;
        }
    }


üìù –î–∞–≤–∞–π—Ç–∏–µ –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞—à –∫–ª–∞—Å—Å.

    BinaryTree tree; 
    tree.insert(11);
    tree.insert(6);
    tree.insert(19);
    tree.insert(4);
    tree.insert(8);
    tree.insert(17);
    tree.insert(43);
    tree.insert(5);
    tree.insert(10);
    tree.insert(31);
    tree.insert(49);


    Node* myNode =  tree.search(17);
    cout<<myNode -> data << endl;          //17
    cout<<myNode ->parent-> data << endl;  // 11

üí° –ú–æ–∂–Ω–æ –∑–∞–º–µ—Ç–∏—Ç—å, —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ù–æ –Ω—É–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å,—á—Ç–æ —Å–∞–º—ã–π –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –±—É–¥–µ—Ç —è–≤–ª—è—Ç—Å—è –µ–≥–æ –∫–æ—Ä–Ω–µ–º. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –ø—Ä–æ—Å—Ç–æ –∏–∑–º–µ–Ω–∏–≤ –∫–æ—Ä–µ–Ω—å –Ω–∞ –≤—ã—Ö–æ–¥–µ —è –º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –¥—Ä—É–≥–æ–µ, –Ω–æ –≤—Å–µ –µ—â–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–µ–µ –¥–µ—Ä–µ–≤–æ.

üß© –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –∞–ª–≥–æ—Ä–∏—Ç–º –æ–±—Ö–æ–¥–∞ –¥–µ—Ä–µ–≤–∞. –ü—Ä–∏—á–µ–º –º–Ω–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –¢.–µ. –∏–º–µ—è –≤ –Ω–∞–ª–∏—á–∏–∏ –ª–∏—à—å –∫–æ—Ä–µ–Ω—å 11 —è –¥–æ–ª–∂–µ–Ω –±—É–¥—É –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –æ—Ç 4 –¥–æ 49. –ó–¥–µ—Å—å –Ω–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —Ä–µ–∫—É—Ä—Å–∏—è –ø–æ—Ç–æ–º—É, —á—Ç–æ —Ü–∏–∫–ª–æ–º —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –¥–æ–≤–æ–ª—å–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞—Ç–∏—á–Ω–æ.

–ö–∞–∫ –Ω—É–∂–Ω–æ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å:
–î–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –æ–¥–∏–∏–Ω —Å–µ—Ç –∏–∑ —É–∑–ª–æ–≤

    
     6    
    / \   
   4   8  
        
–î–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –Ω–∞–º —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –æ—Ç—Ä–∏—Å–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ª–µ–≤–æ–≥–æ, –ø–æ—Ç–æ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∞–º–æ–≥–æ —É–∑–ª–∞ –∏ –Ω–∞–∫–æ–Ω–µ—Ü –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∞–≤–æ–≥–æ —É–∑–ª–∞. –ò –≤–æ—Ç –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –∞–ª–≥–æ—Ä–∏—Ç–º  

    void inOrderTraversal(Node* node)
    {
        //–í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∫—É—Ä—Å–∏–∏
        if (node == nullptr)
            return;

        // –°–Ω–∞—á–∞–ª–∞ –æ–±—Ö–æ–¥–∏–º –ª–µ–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
        inOrderTraversal(node->left);

        // –ó–∞—Ç–µ–º –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        std::cout << node->data << " ";

        // –ü–æ—Ç–æ–º –æ–±—Ö–æ–¥–∏–º –ø—Ä–∞–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
        inOrderTraversal(node->right);
    }

–î–∞–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è —É–∑–µ–ª, –Ω–∞—á–∏–Ω–∞—è —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–µ—á–∞—Ç–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã. –í 99% —Å–ª—É—á–∞–µ–≤ –Ω–∞–º –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ç—É–¥–∞ –∏–º–µ–Ω–Ω–æ –∫–æ—Ä–µ–Ω—å. –ò —ç—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º:

    BinaryTree tree; 
    tree.insert(11);
    auto root = tree.search(11);
    
    tree.insert(6);
    tree.insert(19);
    tree.insert(4);
    tree.insert(8);
    tree.insert(17);
    tree.insert(43);
    tree.insert(5);
    tree.insert(10);
    tree.insert(31);
    tree.insert(49);
    
    tree.inOrderTraversal(root);


üìù –ù–µ–º–Ω–æ–≥–æ –æ—Ç–¥–æ—Ö–Ω–µ–º –æ—Ç –∫–æ–¥–∞ –∏ –∑–∞–π–º–µ–º—Å—è —Ç–µ–æ—Ä–∏–µ–π. 

1Ô∏è‚É£ –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, —Ä–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç–µ–π –¥–µ—Ä–µ–≤—å–µ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –æ—á–µ–Ω—å –º–Ω–æ–≥–æ. –ï—Å–ª–∏ –ø—Ä–æ—â–µ, –¥–µ—Ä–µ–≤–æ ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–±–æ—Ä —É–∑–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∫–∞–∫-—Ç–æ —Å–≤—è–∑–∞–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π. –ò —Å–æ–≤—Å–µ–º –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã —É –∫–∞–∂–¥–æ–≥–æ —É–∑–ª–∞ –±—ã–ª–æ –º–∞–∫—Å–∏–º—É–º –¥–≤–∞ –ø–æ—Ç–æ–º–∫–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, –∑–Ω–∞–∫–æ–º–∞—è –≤—Å–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ ‚Äî —ç—Ç–æ —Ç–æ–∂–µ –¥–µ—Ä–µ–≤–æ. –ï—Å—Ç—å –∫–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–∏—Å–∫ C), –∞ –≤–Ω—É—Ç—Ä–∏ –Ω–µ—ë –∫—É—á–∞ –¥—Ä—É–≥–∏—Ö –ø–∞–ø–æ–∫, –∫–∞–∂–¥–∞—è –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —Ç–æ–∂–µ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–≤–æ–∏ –ø–æ–¥–ø–∞–ø–∫–∏ ‚Äî —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ.

2Ô∏è‚É£ –ë–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ ‚Äî —ç—Ç–æ —Ç–∞–∫–æ–π —Ç–∏–ø –¥–µ—Ä–µ–≤–∞, –≥–¥–µ –æ—Ç –æ–¥–Ω–æ–≥–æ —É–∑–ª–∞ –º–æ–≥—É—Ç –æ—Ç—Ö–æ–¥–∏—Ç—å –º–∞–∫—Å–∏–º—É–º –¥–≤–∞ –ø–æ—Ç–æ–º–∫–∞. –ù–æ –ø—Ä–∏ —ç—Ç–æ–º –æ–Ω–∏ –Ω–∏–∫–∞–∫ –Ω–µ –æ–±—è–∑–∞–Ω—ã –±—ã—Ç—å —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–º–∏. –¢–æ –µ—Å—Ç—å —É –æ–±—ã—á–Ω–æ–≥–æ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –Ω–µ—Ç —á—ë—Ç–∫–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞, –∫—É–¥–∞ –∏ –∫–∞–∫ –≤—Å—Ç–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ —É–∑–ª—ã. –ü–æ—ç—Ç–æ–º—É –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å —Ç–∞–∫–æ–µ –¥–µ—Ä–µ–≤–æ –≤ —Ä–µ–∞–ª—å–Ω–æ–π –∑–∞–¥–∞—á–µ –ø–æ—á—Ç–∏ –Ω–µ—Ä–µ–∞–ª—å–Ω–æ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.

3Ô∏è‚É£ –ê –≤–æ—Ç —Ç–æ, —á—Ç–æ –º—ã —Å–µ–≥–æ–¥–Ω—è —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª–∏, –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –±–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞ (binary search tree –∏–ª–∏ —Å–æ–∫—Ä–∞—â—ë–Ω–Ω–æ BST). –ò –≤–æ—Ç –∫–∞–∫ —Ä–∞–∑ –æ–Ω–æ —É–∂–µ —Ä–µ–∞–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è ‚Äî –ø—Ä–∏—á—ë–º –æ—á–µ–Ω—å —á–∞—Å—Ç–æ.

üí° –ö—Ä–æ–º–µ –±–∏–Ω–∞—Ä–Ω—ã—Ö –¥–µ—Ä–µ–≤—å–µ–≤ –±—ã–≤–∞—é—Ç –µ—â—ë –∏ —É–Ω–∞—Ä–Ω—ã–µ (—Ç–æ –µ—Å—Ç—å, –ø–æ —Å—É—Ç–∏, –æ–±—ã—á–Ω—ã–π —Å–ø–∏—Å–æ–∫) –∏–ª–∏ —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–µ ‚Äî –Ω–æ –æ—Ç –Ω–∏—Ö –æ–±—ã—á–Ω–æ –º–∞–ª–æ —Ç–æ–ª–∫—É, –∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –æ–Ω–∏ –∫—Ä–∞–π–Ω–µ —Ä–µ–¥–∫–æ.


üóëÔ∏è –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —É–¥–∞–ª–µ–Ω–∏–µ —É–∑–ª–æ–≤. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —ç—Ç–æ —Å–∞–º–∞—è —Å–ª–æ–∂–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è —Å –¥–µ—Ä–µ–≤—å—è–º–∏ –≤ –ø–ª–∞–Ω–µ –∞–Ω–∞–ª–∏–∑–∞ –¥–µ–π—Å—Ç–≤–∏–π. –ó–¥–µ—Å—å –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–∞—Ç—å –∫–∞–∫ –ø—Ä–æ—Å—Ç—ã–µ —Ç–∞–∫ –∏ —Å–ª–æ–∂–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏. –ù–∞—á–Ω–µ–º —Å —Å–∞–º–æ–≥–æ –ø—Ä–æ—Å—Ç–æ–≥–æ.

–í –Ω–∞—à–µ–º –¥–µ—Ä–µ–≤–µ

              11
            /    \
          6       19
        /  \     /   \
      4     8   17    43
       \     \        /  \
        5     10     31   49


üü° –£–¥–∞–ª–µ–Ω–∏–µ —É–∑–ª–∞ –±–µ–∑ –ø–æ—Ç–æ–º–∫–æ–≤
–£–∑–µ–ª 5 ‚Äî —ç—Ç–æ –ª–∏—Å—Ç, —Ç–æ –µ—Å—Ç—å —É–∑–µ–ª –±–µ–∑ –ø–æ—Ç–æ–º–∫–æ–≤.
–ó–¥–µ—Å—å –≤—Å—ë –ø—Ä–æ—Å—Ç–æ: –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–π—Ç–∏ —ç—Ç–æ—Ç —É–∑–µ–ª —Å –ø–æ–º–æ—â—å—é –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –ø–æ–∏—Å–∫–∞ –∏ —É–¥–∞–ª–∏—Ç—å –µ–≥–æ.

    1. –£ —Ä–æ–¥–∏—Ç–µ–ª—è (–≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ ‚Äî —É–∑–µ–ª 4) –≤–º–µ—Å—Ç–æ right (–∏–ª–∏ left, –µ—Å–ª–∏ –±—ã —É–∑–µ–ª –±—ã–ª —Å–ª–µ–≤–∞) –∑–∞–ø–∏—Å—ã–≤–∞–µ–º nullptr.
    2. –°–∞–º —É–∑–µ–ª —É–¥–∞–ª—è–µ–º —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ delete.


üîµ –£–¥–∞–ª–µ–Ω–∏–µ —É–∑–ª–∞ —Å –æ–¥–Ω–∏–º –ø–æ—Ç–æ–º–∫–æ–º
–¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ—Å–ª–æ–∂–Ω–µ–µ ‚Äî –∫–æ–≥–¥–∞ —É —É–∑–ª–∞ –µ—Å—Ç—å –æ–¥–∏–Ω –ø–æ—Ç–æ–º–æ–∫. –ù–∞–ø—Ä–∏–º–µ—Ä, —É–∑–µ–ª 8.

–í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –Ω—É–∂–Ω–æ "–ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å" –¥–µ—Ä–µ–≤–æ —Ç–∞–∫, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º–æ–∫ —É–¥–∞–ª—è–µ–º–æ–≥–æ —É–∑–ª–∞ —Å—Ç–∞–ª –Ω–∞–ø—Ä—è–º—É—é –ø–æ—Ç–æ–º–∫–æ–º –µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è.

–í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ:

    1. –£ —É–∑–ª–∞ 6 –≤–º–µ—Å—Ç–æ right = 8 –±—É–¥–µ—Ç right = 10;
    2. –ê —Å–∞–º —É–∑–µ–ª 8 —É–¥–∞–ª—è–µ—Ç—Å—è.


üî¥ –£–¥–∞–ª–µ–Ω–∏–µ —É–∑–ª–∞ —Å –¥–≤—É–º—è –ø–æ—Ç–æ–º–∫–∞–º–∏
–°–∞–º—ã–π —Å–ª–æ–∂–Ω—ã–π —Å–ª—É—á–∞–π ‚Äî –∫–æ–≥–¥–∞ —É —É–∑–ª–∞ –µ—Å—Ç—å –¥–≤–∞ –ø–æ—Ç–æ–º–∫–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, —É–∑–µ–ª 19.
–í —Ç–∞–∫–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ –Ω–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∑–∞–º–µ–Ω—É –¥–ª—è —É–¥–∞–ª—è–µ–º–æ–≥–æ —É–∑–ª–∞. –û–±—ã—á–Ω–æ –±–µ—Ä—ë—Ç—Å—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É–∑–µ–ª –∏–∑ –ø—Ä–∞–≤–æ–≥–æ –ø–æ–¥–¥–µ—Ä–µ–≤–∞ (—Ç–æ –µ—Å—Ç—å —Å–∞–º—ã–π "–ª–µ–≤—ã–π" —É–∑–µ–ª —Å–ø—Ä–∞–≤–∞). –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –¥–µ—Ä–µ–≤–æ –æ—Å—Ç–∞–≤–∞–ª–æ—Å—å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º.

–í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —ç—Ç–æ —É–∑–µ–ª 31.

–î–∞–ª—å—à–µ:

    –º—ã –∫–æ–ø–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ 31 –≤ —É–∑–µ–ª 19;

    –ø–æ—Å–ª–µ —á–µ–≥–æ —É–¥–∞–ª—è–µ–º —Å–∞–º —É–∑–µ–ª 31.




üí° –î–ª—è –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —É–∑–ª–∞ (—Ç.–µ. —Å–∞–º–æ–≥–æ –ª–µ–≤–æ–≥–æ) –Ω–∞—á–∏–Ω–∞—è —Å –∫–∞–∫–æ–π-—Ç–æ —Ç–æ—á–∫–∏ –ø—Ä–æ–ø–∏—à–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ-—Ü–∏—é

    Node* findMin(Node* node) 
    {
        while (node != nullptr && node->left != nullptr) 
        {
            node = node->left;
        }

        return node;
    }

–î–∞–ª–µ–µ –ø—Ä–æ–ø–∏—à–µ–º –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏—è. 


    Node* deleteNode(Node* root, int key) 
    {
        if (root == nullptr)
            return nullptr;

        // 1. –ò—â–µ–º —É–∑–µ–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
        if (key < root->data) {
            root->left = deleteNode(root->left, key);
        } else if (key > root->data) {
            root->right = deleteNode(root->right, key);
        } else {
            // üéØ –ù–∞–π–¥–µ–Ω —É–∑–µ–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å

            // üü° –°–ª—É—á–∞–π 1: —É–∑–µ–ª ‚Äî –ª–∏—Å—Ç (–Ω–µ—Ç –¥–µ—Ç–µ–π)
            if (root->left == nullptr && root->right == nullptr) {
                delete root;
                return nullptr;
            }

            // üîµ –°–ª—É—á–∞–π 2: —É —É–∑–ª–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–æ—Ç–æ–º–æ–∫

            // –¢–æ–ª—å–∫–æ –ø—Ä–∞–≤—ã–π –ø–æ—Ç–æ–º–æ–∫
            else if (root->left == nullptr) {
                Node* temp = root->right;
                delete root;
                return temp;
            }
            // –¢–æ–ª—å–∫–æ –ª–µ–≤—ã–π –ø–æ—Ç–æ–º–æ–∫
            else if (root->right == nullptr) {
                Node* temp = root->left;
                delete root;
                return temp;
            }

            // üî¥ –°–ª—É—á–∞–π 3: —É —É–∑–ª–∞ –¥–≤–∞ –ø–æ—Ç–æ–º–∫–∞
            else {
                // –ù–∞—Ö–æ–¥–∏–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É–∑–µ–ª –≤ –ø—Ä–∞–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ
                Node* successor = findMin(root->right);

                // –ö–æ–ø–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–µ–µ–º–Ω–∏–∫–∞ –≤ —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª
                root->data = successor->data;

                // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–µ–º–Ω–∏–∫ –∏–∑ –ø—Ä–∞–≤–æ–≥–æ –ø–æ–¥–¥–µ—Ä–µ–≤–∞ (–æ–Ω —Ç–æ—á–Ω–æ –±—É–¥–µ—Ç –∏–º–µ—Ç—å 0 –∏–ª–∏ 1 –ø–æ—Ç–æ–º–∫–∞)
                root->right = deleteNode(root->right, successor->data);
            }
        }
        return root;
    }


–î–∞–≤–∞–π—Ç–µ —Ç–µ–ø–µ—Ä—å —Å–æ–±–µ—Ä–µ–º –≤—Å–µ –Ω–∞—à–µ –¥–µ—Ä–µ–≤–æ –≤–º–µ—Å—Ç–µ —Å–æ –≤—Å–µ–º–∏ –µ–≥–æ –º–µ—Ç–æ–¥–∞–º–∏:

    class Node
    {
    public:
        int data;

        Node* parent = nullptr;
        Node* left = nullptr;
        Node* right = nullptr;
    };

    class BinaryTree
    {
    private:
        Node* root = nullptr;

    public:

        Node* search(int data)
        {
            Node* current = root;

            while(current != nullptr)
            {
                if(current->data == data)
                    return current;

                //Moving right
                else if(data > current->data)
                    current = current->right;

                //Moving left
                else 
                    current = current->left;
            }

            //In case node not found
            return nullptr;
        }

        void insert(const int data)
        {

            Node* newNode = new Node;

            newNode->data = data;

            newNode->left = nullptr;
            newNode->right = nullptr;
            newNode->parent = nullptr;

            // If tree is empty, new node becomes root
            if (root == nullptr)
            {
                root = newNode;
                return;
            }

            Node* current = root;
            Node* parent = nullptr;

            while(current != nullptr)
            {
                parent = current;

                if(current->data == data)
                {
                    cout << "Cannot insert duplicate value" << endl;
                    delete newNode;
                    return;
                }

                else if(data > current->data)
                    current = current->right;

                else 
                    current = current->left;
            }

            //Now we got the parent.
            if(data > parent->data)
            {
                parent->right = newNode;
                newNode->parent = parent;
            }
            else
            {
                parent->left = newNode;
                newNode->parent = parent;
            }
        }

        void inOrderTraversal(Node* node)
        {
            //–í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∫—É—Ä—Å–∏–∏
            if (node == nullptr)
                return;

            // –°–Ω–∞—á–∞–ª–∞ –æ–±—Ö–æ–¥–∏–º –ª–µ–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
            inOrderTraversal(node->left);

            // –ó–∞—Ç–µ–º –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
            std::cout << node->data << " ";

            // –ü–æ—Ç–æ–º –æ–±—Ö–æ–¥–∏–º –ø—Ä–∞–≤–æ–µ –ø–æ–¥–¥–µ—Ä–µ–≤–æ
            inOrderTraversal(node->right);
        }

        Node* findMin(Node* node) 
        {
            while (node != nullptr && node->left != nullptr) 
            {
                node = node->left;
            }

            return node;
        }

        Node* deleteNode(Node* root, int key) 
        {
            if (root == nullptr)
                return nullptr;

            // 1. –ò—â–µ–º —É–∑–µ–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
            if (key < root->data) {
                root->left = deleteNode(root->left, key);
            } else if (key > root->data) {
                root->right = deleteNode(root->right, key);
            } else {
                // üéØ –ù–∞–π–¥–µ–Ω —É–∑–µ–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å

                // üü° –°–ª—É—á–∞–π 1: —É–∑–µ–ª ‚Äî –ª–∏—Å—Ç (–Ω–µ—Ç –¥–µ—Ç–µ–π)
                if (root->left == nullptr && root->right == nullptr) {
                    delete root;
                    return nullptr;
                }

                // üîµ –°–ª—É—á–∞–π 2: —É —É–∑–ª–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –ø–æ—Ç–æ–º–æ–∫

                // –¢–æ–ª—å–∫–æ –ø—Ä–∞–≤—ã–π –ø–æ—Ç–æ–º–æ–∫
                else if (root->left == nullptr) {
                    Node* temp = root->right;
                    delete root;
                    return temp;
                }
                // –¢–æ–ª—å–∫–æ –ª–µ–≤—ã–π –ø–æ—Ç–æ–º–æ–∫
                else if (root->right == nullptr) {
                    Node* temp = root->left;
                    delete root;
                    return temp;
                }

                // üî¥ –°–ª—É—á–∞–π 3: —É —É–∑–ª–∞ –¥–≤–∞ –ø–æ—Ç–æ–º–∫–∞
                else {
                    // –ù–∞—Ö–æ–¥–∏–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —É–∑–µ–ª –≤ –ø—Ä–∞–≤–æ–º –ø–æ–¥–¥–µ—Ä–µ–≤–µ
                    Node* successor = findMin(root->right);

                    // –ö–æ–ø–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–µ–µ–º–Ω–∏–∫–∞ –≤ —Ç–µ–∫—É—â–∏–π —É–∑–µ–ª
                    root->data = successor->data;

                    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–µ–º–Ω–∏–∫ –∏–∑ –ø—Ä–∞–≤–æ–≥–æ –ø–æ–¥–¥–µ—Ä–µ–≤–∞ (–æ–Ω —Ç–æ—á–Ω–æ –±—É–¥–µ—Ç    –∏–º–µ—Ç—å 0 –∏–ª–∏ 1 –ø–æ—Ç–æ–º–∫–∞)
                    root->right = deleteNode(root->right, successor->data);
                }
            }
            return root;
        }
    };

    int main()
    {
        BinaryTree tree; 
        tree.insert(11);
        auto root = tree.search(11);

        tree.insert(6);
        tree.insert(19);
        tree.insert(4);
        tree.insert(8);
        tree.insert(17);
        tree.insert(43);
        tree.insert(5);
        tree.insert(10);
        tree.insert(31);
        tree.insert(49);

        tree.inOrderTraversal(root);

        tree.deleteNode(root, 19);
        cout << endl<<endl;
        tree.inOrderTraversal(root);
        return 0;
    }

üí° –í —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω–∏ –º—ã, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –±—É–¥–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É–∂–µ –≥–æ—Ç–æ–≤—ã–º–∏, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏.
–ö —Ç–æ–º—É –∂–µ, –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–≥–æ BST —á–∞—â–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –µ–≥–æ –±–æ–ª–µ–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ä–∞–∑–Ω–æ–≤–∏–¥–Ω–æ—Å—Ç–∏ ‚Äî —Ç–∞–∫–∏–µ –∫–∞–∫ AVL-–¥–µ—Ä–µ–≤—å—è –∏ –∫—Ä–∞—Å–Ω–æ-—á—ë—Ä–Ω—ã–µ –¥–µ—Ä–µ–≤—å—è.

–≠—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ—à–∞—é—Ç –æ–¥–Ω—É –∏–∑ –≥–ª–∞–≤–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ BST ‚Äî –ø—Ä–æ–±–ª–µ–º—É –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∏.
–û–Ω–∏ —É–º–µ—é—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –¥–µ—Ä–µ–≤–æ (–≤ —Ç–æ–º —á–∏—Å–ª–µ –Ω–∞—á–∏–Ω–∞—è —Å –∫–æ—Ä–Ω—è) –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —á—Ç–æ–±—ã –æ–Ω–æ –æ—Å—Ç–∞–≤–∞–ª–æ—Å—å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º.

–ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –≤ –æ–±—ã—á–Ω–æ–µ BST –≤—Å—Ç–∞–≤–ª—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã 1, 2, 3, 4, 5, 6 –∏ —Ç.–¥., –º—ã –ø–æ–ª—É—á–∏–º –¥–µ—Ä–µ–≤–æ, —Å–∏–ª—å–Ω–æ –ø–µ—Ä–µ–∫–æ—à–µ–Ω–Ω–æ–µ –≤–ø—Ä–∞–≤–æ ‚Äî –≤–µ–¥—å —ç–ª–µ–º–µ–Ω—Ç—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é, –∏ –∫–æ—Ä–µ–Ω—å –±—ã–ª –≤—ã–±—Ä–∞–Ω –Ω–µ—É–¥–∞—á–Ω–æ.

üå≤ –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ –¥–µ—Ä–µ–≤—å–µ–≤: –ó–∞—á–µ–º –≤–æ–æ–±—â–µ?

–ö–∞–∫ –º—ã —É–∂–µ –≥–æ–≤–æ—Ä–∏–ª–∏, –æ–±—ã—á–Ω–æ–µ –±–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞ (BST) –º–æ–∂–µ—Ç –ø–µ—Ä–µ–∫–æ—Å–∏—Ç—å—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—Å–µ –≤–ø—Ä–∞–≤–æ), –∏ —Ç–æ–≥–¥–∞ –µ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–∞–¥–∞–µ—Ç –¥–æ –æ–±—ã—á–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ ‚Äî O(n) –≤–º–µ—Å—Ç–æ O(log n).

–ß—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —ç—Ç–æ–≥–æ, –ø—Ä–∏–¥—É–º–∞–ª–∏ —Å–∞–º–æ–±–∞–ª–∞–Ω—Å–∏—Ä—É—é—â–∏–µ—Å—è –¥–µ—Ä–µ–≤—å—è. –î–≤–∞ —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–∏–ø–∞:

‚úÖ AVL-–¥–µ—Ä–µ–≤–æ

AVL (Adelson-Velsky and Landis) ‚Äî —ç—Ç–æ –ø–µ—Ä–≤–æ–µ —Å–∞–º–æ–±–∞–ª–∞–Ω—Å–∏—Ä—É—é—â–µ–µ—Å—è –±–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞.

üîπ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:

    –£ –∫–∞–∂–¥–æ–≥–æ —É–∑–ª–∞ —Ö—Ä–∞–Ω–∏—Ç—Å—è —Ä–∞–∑–Ω–∏—Ü–∞ –≤—ã—Å–æ—Ç –º–µ–∂–¥—É –ª–µ–≤—ã–º –∏ –ø—Ä–∞–≤—ã–º –ø–æ–¥–¥–µ—Ä–µ–≤–æ–º (–±–∞–ª–∞–Ω—Å-—Ñ–∞–∫—Ç–æ—Ä).

    –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –≤—Å—Ç–∞–≤–∫–∏ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è –¥–µ—Ä–µ–≤–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–ª–∞–Ω—Å.

    –ï—Å–ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ —Å—Ç–∞–ª–∞ –±–æ–ª—å—à–µ 1 –∏–ª–∏ –º–µ–Ω—å—à–µ -1, –¥–µ—Ä–µ–≤–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–≤–æ—Ä–æ—Ç (rotation) ‚Äî —Ç–æ –µ—Å—Ç—å –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–∫—Ä–∞–∏–≤–∞–µ—Ç —Å–≤–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É, —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –±—ã—Ç—å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º.

üß† –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å:

    –û—á–µ–Ω—å —Å—Ç—Ä–æ–≥–æ–µ –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ.

    –ë—ã—Å—Ç—Ä–µ–µ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤—Å–µ–≥–¥–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ ‚Äú—Ä–æ–≤–Ω–æ–µ‚Äù.

    –ù–µ–º–Ω–æ–≥–æ –º–µ–¥–ª–µ–Ω–Ω–µ–µ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –∏ —É–¥–∞–ª–µ–Ω–∏–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ —á–∞—Å—Ç–æ –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è.

üî¥‚ö´ –ö—Ä–∞—Å–Ω–æ-—á–µ—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ (Red-Black Tree)

–≠—Ç–æ –¥—Ä—É–≥–æ–π —Ç–∏–ø —Å–∞–º–æ–±–∞–ª–∞–Ω—Å–∏—Ä—É—é—â–µ–≥–æ—Å—è –¥–µ—Ä–µ–≤–∞, –Ω–æ —Å –º–µ–Ω–µ–µ —Å—Ç—Ä–æ–≥–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏.

üîπ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç:

    –ö–∞–∂–¥—ã–π —É–∑–µ–ª –∏–º–µ–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä ‚Äî —Ü–≤–µ—Ç: –∫—Ä–∞—Å–Ω—ã–π –∏–ª–∏ —á—ë—Ä–Ω—ã–π.

    –î–µ—Ä–µ–≤–æ —Å–ª–µ–¥—É–µ—Ç —Ä—è–¥—É –ø—Ä–∞–≤–∏–ª –ø–æ —Ü–≤–µ—Ç–∞–º, —á—Ç–æ–±—ã —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Å—Ç–∞–≤–∞–ª–∞—Å—å —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π "–≤ —Ü–µ–ª–æ–º", –Ω–æ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏–¥–µ–∞–ª—å–Ω–æ.

    –ü–æ—Å–ª–µ –≤—Å—Ç–∞–≤–∫–∏ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è –º–æ–∂–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –ø–µ—Ä–µ–∫—Ä–∞—Å–∫–∞ —É–∑–ª–æ–≤ –∏ –ø–æ–≤–æ—Ä–æ—Ç—ã, –Ω–æ —Ä–µ–∂–µ, —á–µ–º –≤ AVL.

üß† –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–ø–æ–º–Ω–∏—Ç—å:

    –ë–∞–ª–∞–Ω—Å–∏—Ä—É–µ—Ç –º—è–≥—á–µ, —á–µ–º AVL.

    –ù–µ–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –∏ —É–¥–∞–ª–µ–Ω–∏–∏.

    –®–∏—Ä–æ–∫–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ std::map –∏ std::set –≤ C++).

–ò –≥–æ—Ç–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∫–∞–∫ —Ä–∞–∑ —Ç–∞–∫–∏ –ø–æ–¥ —Å–æ–±–æ–π –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥–∞–Ω–Ω—ã–µ –¥–µ—Ä–µ–≤—å—è - —Å–∞–º–æ–±–∞–ª–∞–Ω—Å–∏—Ä—É—é—â–µ–µ—Å—è.