üëá –°–µ–≥–æ–¥–Ω—è –º—ã —Ä–∞–∑–±–µ—Ä–µ–º –∫–∞–∫ –¥–æ–±–∞–≤–ª—è—Ç—å –∏ —É–¥–∞–ª—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏—Ö –º–∞—Å—Å–∏–≤–∞—Ö. 

–ú—ã —É–∂–µ –∑–Ω–∞–µ–º –∫–∞–∫ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑ –æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤ –¥—Ä—É–≥–æ–π, –∏ —ç—Ç–∏ –∑–Ω–∞–Ω–∏—è –Ω–∞–º –æ—á–µ–Ω—å –ø—Ä–∏–≥–æ–¥—è—Ç—Å—è! –í–µ–¥—å –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –∏ —É–¥–∞–ª–µ–Ω–∏–∏ –Ω–∞–º —á–∞—Å—Ç–æ –ø—Ä–∏–¥–µ—Ç—Å—è –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –≤–µ—Å—å –º–∞—Å—Å–∏–≤.

üîç –ü—Ä–æ–±–ª–µ–º–∞: –ø–æ—á–µ–º—É –Ω–µ–ª—å–∑—è –ø—Ä–æ—Å—Ç–æ "—Ä–∞—Å—à–∏—Ä–∏—Ç—å" –º–∞—Å—Å–∏–≤?
–ü—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –º–∞—Å—Å–∏–≤ –Ω–∞ 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤:

    int* arr = new int[5] {10, 20, 30, 40, 50};

–ß—Ç–æ –µ—Å–ª–∏ –Ω–∞–º –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç? –ú–æ–∂–µ–º –ª–∏ –º—ã –ø—Ä–æ—Å—Ç–æ "–ø–æ–ø—Ä–æ—Å–∏—Ç—å" —É —Å–∏—Å—Ç–µ–º—ã –µ—â–µ –æ–¥–Ω—É —è—á–µ–π–∫—É –ø–∞–º—è—Ç–∏ —Ä—è–¥–æ–º?

‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ù–ï–¢! –ü–∞–º—è—Ç—å –≤—ã–¥–µ–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –±–ª–æ–∫–∞–º–∏. –ú—ã –Ω–µ –º–æ–∂–µ–º –ø—Ä–æ—Å—Ç–æ "–¥–æ–ø–∏—Å–∞—Ç—å" –µ—â–µ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç - –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —è—á–µ–π–∫–∞–ø–∞–º—è—Ç–∏ —É–∂–µ –∑–∞–Ω—è—Ç–∞ –¥—Ä—É–≥–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.

üß† –†–µ—à–µ–Ω–∏–µ: –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç—É–¥–∞ –≤—Å–µ —Å—Ç–∞—Ä—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã + –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π. –û–¥–Ω–∞–∫–æ –∏ –∑–¥–µ—Å–± –µ—Å—Ç—å —Å–≤–æ–∏ –Ω—å—é–∞–Ω—Å—ã. –¢–∞–∫ –∫–∞–∫ —ç–ª–µ–º–µ–Ω—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ–Ω–µ—Ü –≤ –Ω–∞—á–∞–ª—Ä–æ –∏–ª–∏ –≤ —Å–µ—Ä–µ–¥–∏–Ω—É –º–∞—Å—Å–∏–≤–∞. –°–Ω–∞—á–∞–ª–∞ —Ä–∞–∑–±–µ—Ä–µ–º —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ª—É—á–∞–π - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü. –î–∞–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è append –∏ –≤ 99% —Å–ª—É—á–∞–µ–≤ –º—ã –±—É–¥–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–º–µ–Ω–Ω–æ –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞.

–ê–ª–≥–æ—Ä–∏—Ç–º —Ç–∞–∫–æ–π:

‚Ä¢ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Ä–∞–∑–º–µ—Ä–æ–º +1 —ç–ª–µ–º–µ–Ω—Ç
‚Ä¢ –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤
‚Ä¢ –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü
‚Ä¢ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –º–∞—Å—Å–∏–≤
‚Ä¢ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤

    int main()
    {
    	int oldSize = 5;
    	int newsSize = oldSize + 1;

    	int* arr = new int[oldSize] {10, 20, 30, 40, 50};

    	cout << "Old array: " << endl;
    	ShowArray(arr, oldSize);

    	// Create new array with new size
    	int* newArrTempPointer = new int[newsSize];

    	// Copy old array to new array
    	for (int i = 0; i < oldSize; i++) 
    	{
    		newArrTempPointer[i] = arr[i]; // last cell is still empty
    	}

    	newArrTempPointer[newsSize - 1] = 60; // add new element to the last cell

    	delete[] arr; // free old array memory

    	// point old array pointer to new array
    	arr = newArrTempPointer; 

    	// avoid dangling pointer
    	newArrTempPointer = nullptr; 

    	cout << "New array: " << endl;
    	ShowArray(arr, newsSize);
    }

üë©‚Äçüéì –û–ª–∏—á–Ω–æ, —Ç–µ–ø–µ—Ä—å –º—ã —É–º–µ–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞. –í–∞–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å, —Ç–æ, —á—Ç–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü –∏–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞–º –Ω—É–∂–µ–Ω –ª–∏—à—å —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç. –ü–æ–∑–∏—Ü–∏—é –≤—Å—Ç–∞–≤–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –ø—Ä–æ—Å–∏–º. 

üí° –í—Å—Ç–∞–≤–∫–∞ –≤ —Å–µ—Ä–µ–¥–∏–Ω—É –º–∞—Å—Å–∏–≤–∞ —ç—Ç–æ –∫—É–¥–∞ –±–æ–ª–µ–µ —Ä–µ–¥–∫–∏–π, –Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Å–ª—É—á–∞–π. –í–æ –ø–µ—Ä–≤—ã—Ö –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ —Å–ª—É—á–∞—è , –∑–¥–µ—Å—å –º—ã –¥–æ–ª–∂–Ω—ã –ø–æ–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–∞–º–æ –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏ –∏–Ω–¥–µ–∫—Å –∫—É–¥–∞ –µ–≥–æ –≤—Å—Ç–∞–≤–∏—Ç—å. 

üéØ –ü—Ä–∞–∫—Ç–∏–∫–∞: –í—Å—Ç–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–µ—Ä–µ–¥–∏–Ω—É –º–∞—Å—Å–∏–≤–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ-—Ü–∏–∏ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏. –û–Ω–∏ –±—É–¥—É—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω—ã –ø–æ—Å–ª–µ:

    int main()
    {
    	int oldSize = 5;
    	int newSize = oldSize + 1;

    	int newElement = -100;
    	int insertIndex = 2;

    	int* arr = new int[oldSize] {10, 20, 30, 40, 50};

    	cout << "Old array: " << endl;
    	ShowArray(arr, oldSize);

    	// Create new array with new size
    	int* newArrTempPointer = new int[newSize];

    	//Copy elements to new array until insert index
    	for (int i = 0; i < insertIndex; i++) 
    	{
    		newArrTempPointer[i] = arr[i];
    	}

    	// Insert new element at insert index
    	newArrTempPointer[insertIndex] = newElement;

    	//Copy the rest of the elements after insert index

    	for (int i = insertIndex; i < oldSize; i++)
    	{
    		newArrTempPointer[i + 1] = arr[i];
    	}

    	delete[] arr;
    	arr = newArrTempPointer;
    	newArrTempPointer = nullptr;
    
    	cout << "New array: " << endl;
    	ShowArray(arr, newSize);

    }

üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ –∏–Ω–¥–µ–∫—Å—É. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª–∏–±–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–æ–º–µ—Ä, –ª–∏–±–æ –∏–Ω–¥–µ–∫—Å —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω —Ö–æ—á–µ—Ç —É–¥–∞–ª–∏—Ç—å –∏–∑ –º–∞—Å—Å–∏–≤–∞, –∞ –º—ã –¥–æ–ª–∂–Ω—ã —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ:

‚Ä¢ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Ä–∞–∑–º–µ—Ä–æ–º -1 —ç–ª–µ–º–µ–Ω—Ç
‚Ä¢ –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –ö–†–û–ú–ï —É–¥–∞–ª—è–µ–º–æ–≥–æ
‚Ä¢ –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Å—Ç–∞—Ä—ã–π –º–∞—Å—Å–∏–≤
‚Ä¢ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤

üîù –û–¥–Ω–∞–∫–æ —Å—Ç–æ–∏—Ç –ø–æ–º–Ω–∏—Ç—å –æ—á–µ–Ω—å –≤–∞–∂–Ω—É—é –≤–µ—â—å. –ü—Ä–æ–±–ª–µ–º–∞ –≤ —Ç–æ–º, —á—Ç–æ –∫–æ–≥–¥–∞ –º—ã —É–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç, –∏–Ω–¥–µ–∫—Å—ã –≤ —Å—Ç–∞—Ä–æ–º –∏ –Ω–æ–≤–æ–º –º–∞—Å—Å–∏–≤–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç. –ü–æ —ç—Ç–æ–º—É –Ω–∞–º –Ω—É–∂–Ω–æ –∫–∞–∫-—Ç–æ –æ–±–æ–π—Ç–∏ —ç—Ç–æ—Ç —Å–ª—É—á–∞–π. –ú–æ–∂–µ–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–æ–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–∞–ø—Ä–∏–º–µ—Ä newIndex, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –∑–∞ –∏–Ω–¥–µ–∫—Å—ã –≤ –Ω–æ–≤–æ–º –º–∞—Å—Å–∏–≤–µ. –ò –≤ –º–æ–º–µ–Ω—Ç –∫–æ–≥–¥–∞ –º—ã –¥–æ–π–¥–µ–º –¥–æ –Ω–µ–∂–µ–ª–∞–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º—ã –ø—Ä–∏–±–∞–≤–∏–º –∏–Ω–¥–µ–∫—Å —Å—Ç–∞—Ä–æ–≥–æ, –Ω–æ –Ω–µ –ø—Ä–∏–±–∞–≤–∏–º –∏–Ω–¥–µ–∫—Å –Ω–æ–≤–æ–≥–æ. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º newIndex –±—É–¥–µ—Ç —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –º—ã —Ä–µ–∞–ª—å–Ω–æ —á—Ç–æ-—Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤.


    int main()
    {
    	int size = 5;
    	int newSize = size - 1;
    	int deletedIndex = 2; 

    	int* arr = new int[size] {10, 20, 30, 40, 50};
    	cout << "Original array: ";
    	ShowArray(arr, size);
    	cout << endl << endl;

    	int* newArrTemp = new int[newSize];

    	int newIndex = 0;
    	for (int i = 0; i < size; i++) 
    	{
    		if (i != deletedIndex) 
    		{
    			newArrTemp[newIndex] = arr[i];
    			newIndex++;
    		}
    	}

    	delete[] arr;
    	arr = newArrTemp;
    	newArrTemp = nullptr;

    	cout << "New array: ";
    	ShowArray(arr, newSize);

    }


üîç –ú–æ–∂–Ω–æ –∑–∞–º–µ—Ç–∏—Ç—å, —á—Ç–æ –Ω–µ –≤–∞–∂–Ω–æ, —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —ç—Ç–æ –º–∞—Å—Å–∏–≤ –∏–ª–∏ –Ω–µ—Ç, –ø–æ–¥ –Ω–µ–≥–æ –≤—Å–µ —Ä–∞–≤–Ω–æ –≤—ã–¥–µ–ª—è–µ—Ç—Å—è –∫–∞–∫–∞—è-—Ç–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏. –ò –≤ —Å–ª—É—á–∞–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –º—ã –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏ –∏ –ø–æ—Ç–æ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏. –≠—Ç–æ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å —Ç–∞–∫ –∫–∞–∫ —Å–µ–π—á–∞—Å –º—ã –º—ã –ø–æ–ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≤–µ—Ä–Ω—É—Ç—å –≤–µ—Å—å –¥–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –Ω–∞—á–Ω–µ–º –º—ã —Å —Ñ—É–Ω–∫—Ü–∏–∏ Append. –°–Ω–∞—á–∞–ª–∞ —Å–¥–µ–ª–∞–µ–º –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –ø—Ä–æ–±–ª–µ–º—É.

–û–¥–Ω–∞–∫–æ –ø–µ—Ä–µ–¥ —ç—Ç–∏–º —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º —Ç–æ –∫–∞–∫ 2 —É–∫–∞–∑–∞—Ç–µ–ª—è –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å –æ–¥–Ω—É –∏ —Ç–æ –∂–µ –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏. 

–¢–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä –µ—Å–ª–∏ —É –Ω–∞—Å –µ—Å—Ç—å 2 —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ –æ–¥–Ω—É –∏ —Ç—É –∂–µ –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏:

	int* arr_1 = new int[5] { 1, 2, 3, 4, 5 };
	int* arr_2 = arr_1;

	cout << "Array 1: ";
	ShowArray(arr_1, 5);

	cout << "\n\n==============\n\n";
	cout << "Array 2: ";
	ShowArray(arr_2, 5);

	delete[] arr_2;
	arr_2 = nullptr;

	cout << "\n\n======after deleting the data from arr_2 pointer========\n\n";
	cout << "Array 1: ";
	ShowArray(arr_1, 5);

üß† –ß—Ç–æ —Ç—É—Ç –ø—Ä–æ–∏–∑–æ—à–ª–æ:
–í—Ç–æ—Ä–æ–π —É–∫–∞–∑–∞—Ç–µ–ª—å, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ —Ç–æ–º—É –∂–µ –∞–¥—Ä–µ—Å—É, —á—Ç–æ –∏ –ø–µ—Ä–≤—ã–π –æ—á–∏—Å—Ç–∏–ª –¥–∞–Ω–Ω—É—é –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏ –∏ –ø–µ—Ä–µ—Å—Ç–∞–ª —Ç—É–¥–∞ —É–∫–∞–∑—ã–≤—Ç—å. –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –¥–æ—Å—Ç–∞—Ç—å –æ—Ç—Ç—É–¥–∞ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ 1—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å –º—ã –±—É–¥–µ–º —á–∏—Ç–∞—Ç—å –º—É—Å–æ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–ª–∏ –ø–æ–ª—É—á–∏–º –æ—à–∏–±–∫—É. –ó–∞–ø–æ–º–Ω–∏—Ç–µ —ç—Ç–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ.

–î–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞. –ù–∞—á–Ω–µ–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ - –ø–µ—Ä–µ–¥–∞–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å –æ–±—ã—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º:

	void AppendElement(int* arr, int size, int element)
	{
		// Create new array with new size
	    int* newArr = new int[size + 1];

		//Copy old array to new array
	    for (int i = 0; i < size; i++)
	    {
	        newArr[i] = arr[i]; // last cell is still empty
		}

	    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
	    newArr[size] = element;

	    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Å—Ç–∞—Ä—ã–π –º–∞—Å—Å–∏–≤
	    delete[] arr;

	    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —É–∫–∞–∑–∞—Ç–µ–ª—å
	    arr = newArr; // ‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê –ó–î–ï–°–¨!
	}

–ó–¥–µ—Å—å —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–±–ª–µ–º, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –º–æ–∂–µ–º —É–≤–∏–¥–µ—Ç—å –≤ —Ö–æ–¥–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π —Ñ-—Ü–∏–∏.

	int main()
	{
	    int size = 5;
	    int* myArray = new int[size] {10, 20, 30, 40, 50};

		int* copyOfArray = myArray; // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é —É–∫–∞–∑–∞—Ç–µ–ª—è –Ω–∞ –º–∞—Å—Å–∏–≤


		cout << "Original array: ";
	    ShowArray(myArray, size);

	    AppendElement(myArray, size, 60);

		cout << "Array after appending 60: ";

	    ShowArray(myArray, size);

		cout << "\n\n\nPointer after appending address: " << myArray << endl << endl << endl;
	    //delete[] myArray;

	}

–í—Ç–æ—Ä–æ–π ShowArray –Ω–∞–º –ø–æ–∫–∞–∂–µ—Ç –∫–∞–∫–∏–µ-—Ç–æ –º—É—Å–æ—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è. –ò –≤—Å–µ–≥–æ 5 —à—Ç—É–∫, –∞ –Ω–µ 6 –∫–∞–∫ –æ–∂–∏–¥–∞–ª–æ—Å—å. –í –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫ —ç—Ç–æ–º—É –µ—Å–ª–∏ —Ä–∞—Å–∫–æ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π delete —Ç–æ —è –±—É–¥—É –æ—Å–≤–æ–±–æ–∂–¥–∞—Ç—å —É–∂–µ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—É—é –ø–∞–º—è—Ç—å, —á—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –æ—à–∏–±–∫–µ –≤ —Å–∏—Å—Ç–µ–º–µ.

ü§î –ü–æ—á–µ–º—É —Ç–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?

–ü—Ä–æ–±–ª–µ–º–∞ 1: arr = newArr –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –º–µ–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ–ø–∏—é —É–∫–∞–∑–∞—Ç–µ–ª—è. –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π myArray –≤ main() –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º! –¢.–µ. —è –Ω–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä—è–≤–ª—è—é —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ –ø–∞–º—è—Ç–∏. –¢–∞–∫ –∫–∞–∫ —É–∫–∞–∑–∞—Ç–µ–ª—å arr –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ —Ñ-—Ü–∏–∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏—à—å –∫–æ–ø–∏–µ–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —É–∫–∞–∑–∞—Ç–µ–ª—è.

–ü—Ä–æ–±–ª–µ–º–∞ 2: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è size —Ç–æ–∂–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é - –º—ã –Ω–µ –º–æ–∂–µ–º –µ–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏–∏. –ò–º–µ–Ω–Ω–æ –ø–æ —ç—Ç–æ–º—É –º—ã –≤–∏–¥–∏–º 5 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–º–µ—Å—Ç–æ 6.

–ï—Å—Ç—å 2 —Ä–µ—à–µ–Ω–∏—è, –≤—Ç–æ—Ä–æ–µ –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º:
–†–∞—Å—Å–º–æ—Ç—Ä–∏–º —Å–Ω–∞—á–∞–ª–∞ –ø–µ—Ä–≤–æ–µ.
–¢–∞–∫ –∫–∞–∫ –º—ã –¥–æ–ª–∂–Ω—ã –ø–æ–º–µ–Ω—è—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ main-e —á—Ç–æ–±—ã –æ–Ω —É–∂–µ —É–∫–∞–∑—ã–≤–∞–ª –Ω–∞ –Ω–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏, –º–æ–∂–Ω–æ –ø–æ—Å—Ç—É–ø–∏—Ç—å –∫–∞–∫ —Å —Ñ-—Ü–∏—è–º–∏ –º–µ–Ω—è—é—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, —Ç.–µ. –ø–æ–º–µ–Ω—è—Ç—å —Å–∏–≥–Ω–∞—Ç—É—Ä—É —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, —á—Ç–æ–±—ã –æ–Ω–∞ –º–Ω–µ –≤–µ—Ä–Ω—É–ª–∞ —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –Ω–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ —è —Å–º–æ–≥—É –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å –∏–∑ main-a –Ω–∞ –Ω–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏. 

	int* appendElement(int* arr, int size, int newElement) {
	    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
	    int* newArr = new int[size + 1];
	
	    // –ö–æ–ø–∏—Ä—É–µ–º —Å—Ç–∞—Ä—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
	    for (int i = 0; i < size; i++) {
	        newArr[i] = arr[i];
	    }
	
	    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
	    newArr[size] = newElement;
	
	    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Å—Ç–∞—Ä—ã–π –º–∞—Å—Å–∏–≤
	    delete[] arr;
	
	    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–¥—Ä–µ—Å –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
	    return newArr;
	}

–ò —Ç–µ–ø–µ—Ä—å —ç—Ç—É —Ñ-—Ü–∏—é –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–∞–∫:

	int size = 5;
	int* arr_1 = new int[size] { 1, 2, 3, 4, 5 };

	int newElement = 6;

	arr_1 = AppendElement(arr_1, size, newElement);


	ShowArray(arr_1, size);
	cout << "Last element = " << arr_1[5];

–° –∫–∞–∫–æ–π –ø—Ä–æ–±–ª–µ–º–æ–π –º—ã —Å—Ç–æ–ª–∫–Ω–µ–º—Å—è —Å–µ–π—á–∞—Å - —ç—Ç–æ —Ç–æ, —á—Ç–æ –≤ —Ü–∏–∫–ª–µ –≤ —Ñ-—Ü–∏–∏ ShowArray —è –¥–æ—Ö–æ–∂—É —Ç–æ–ª—å–∫–æ –¥–æ 5–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ. –ú–æ—è —Ñ-—Ü–∏—è Append –∏–∑–º–µ–Ω–∏–ª–∞ —É–∫–∞–∑–∞—Ç–µ–ª—å –∏ –≤–µ—Ä–Ω—É–ª–∞ –º–Ω–µ —Ç–æ–ª—å–∫–æ –µ–≥–æ. –¢–∞–∫ –∫–∞–∫ return –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —è –Ω–µ –º–æ–≥—É –≤–µ—Ä–Ω—É—Ç—å –∏–∑ —Ñ-—Ü–∏–∏ –∏ –Ω–æ–≤—ã–π —É–∫–∞–∑–∞—Ç–µ–ª—å –∏ –Ω–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä. –¢–æ–≥–¥–∞, –º–Ω–µ –Ω—É–∂–Ω–æ –≤ main —Ñ-—Ü–∏–∏ –ø–æ–∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Ç–æ–º, —á—Ç–æ–±—ã —è –≤—Ä—É—á–Ω—É—é –∏–∑–º–µ–Ω–∏–ª –º–∞—Å—Å–∏–≤ –Ω–∞ +1.


	int size = 5;
	int* arr_1 = new int[size] { 1, 2, 3, 4, 5 };

	int newElement = 6;

	arr_1 = AppendElement(arr_1, size, newElement);
	size++;

	ShowArray(arr_1, size);


–¢–µ–ø–µ—Ä—å –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ç–∫–æ, –Ω–æ –Ω–µ —É–¥–æ–±–Ω–æ. 

‚úÖ –ü–ª—é—Å—ã —ç—Ç–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞:

	–§—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
	–ö–æ–¥ –ø–æ–Ω—è—Ç–Ω—ã–π –∏ —á–∏—Ç–∞–µ–º—ã–π
	–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —è–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –º—ã –ø–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤

‚ùå –ú–∏–Ω—É—Å—ã —ç—Ç–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞:

	–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –¥–æ–ª–∂–µ–Ω –ø–æ–º–Ω–∏—Ç—å –æ–±–Ω–æ–≤–ª—è—Ç—å size –≤—Ä—É—á–Ω—É—é.
	–ú–æ–∂–Ω–æ –∑–∞–±—ã—Ç—å –∏ –Ω–µ –ø—Ä–∏—Å–≤–æ–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ-—Ü–∏–∏ –∫ —Å—Ç–∞—Ä–æ–º—É —É–∫–∞–∑–∞—Ç–µ–ª—é.
	–ù–µ—É–¥–æ–±–Ω–æ –ø—Ä–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö. –¢–∞–∫ –∫–∞–∫ –Ω–∞ –∫–∞–∂–¥—ã–π append –Ω—É–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å Size++.
		
		myArray = appendElement(myArray, size, 60); size++;
		myArray = appendElement(myArray, size, 70); size++;
		myArray = appendElement(myArray, size, 80); size++;

–ö–∞–∫ –º–æ–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –¥–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å? 

üë©‚Äçüíª –ú—ã —Å –≤–∞–º–∏ —É–∂–µ –∑–Ω–∞–µ–º, —á—Ç–æ —Ç–∞–∫–æ–µ —Å—Å—ã–ª–∫–∏ - —ç—Ç–æ –ª–∏—à—å –≤—Ç–æ—Ä–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–Ω–Ω–æ–π, –∏ –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –≤ —Ñ—É–Ω–∫—Ü–∏—é —Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ —Ñ-—Ü–∏–∏, –ø–æ–≤–ª–µ—á–µ—Ç –∑–∞ —Å–æ–±–æ–π –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞. –ü–æ—ç—Ç–æ–º—É –º—ã –º–æ–∂–µ–º –ø–µ—Ä–µ–¥–∞—Ç—å size –ø–æ —Å—Å—ã–ª–∫–µ, –∏–∑–º–µ–Ω—Ç—å –µ–≥–æ –≤–Ω—É—Ç—Ä–∏ —Ñ-—Ü–∏–∏ –∏ –≤ main-e —É–∂–µ –Ω–µ –ø–∞—Ä–∏—Ç—å—Å—è —Å –∫–æ–ª-–≤–æ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ç–∞–∫ –∫–∞–∫ —Ñ-—Ü–∏—è Append –∑–∞ –Ω–∞—Å –ø–æ–∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Ç–æ–º, —á—Ç–æ–±—ã —ç—Ç–æ –¥–µ–ª–∞—Ç—å –Ω–∞ –∫–∞–∂–¥–æ–π –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞.

	int* AppendElement(int* arr, int& size, int element)
	{
		// Create new array with new size
	    int* newArr = new int[size + 1];

		//Copy old array to new array
	    for (int i = 0; i < size; i++)
	    {
	        newArr[i] = arr[i]; // last cell is still empty
		}

	    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
	    newArr[size] = element;

		size++;

	    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Å—Ç–∞—Ä—ã–π –º–∞—Å—Å–∏–≤
	    delete[] arr;

	    return newArr; 
	}

	int main()
	{
		int size = 5;
		int* arr_1 = new int[size] { 1, 2, 3, 4, 5 };

		int newElement = 6;

		arr_1 = AppendElement(arr_1, size, newElement);
		arr_1 = AppendElement(arr_1, size, 10);
		arr_1 = AppendElement(arr_1, size, 96);
		arr_1 = AppendElement(arr_1, size, 960);
		arr_1 = AppendElement(arr_1, size, -100);

		ShowArray(arr_1, size);

	}

–£–∂–µ –ª—É—á—à–µ, –Ω–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤–æ–æ–±—â–µ –∏–¥–µ–∞–ª—å–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É—è —Ç–µ –∂–µ —Å–∞–º—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–æ —É–∂–µ –∫ —É–∫–∞–∑–∞—Ç–µ–ª—è–º. –ò —Ç–æ–≥–¥–∞ –¥–∞–∂–µ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤–µ—Ä–Ω—É—Ç—å –æ–±—Ä–∞—Ç–Ω–æ void –∫–∞–∫ —Ç–∏–ø –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è. –ò –¥–ª—è –≤–æ–æ–±—â–µ –ª—É—á—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –æ–±—ä—è–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∫–∞–∫ const, —á—Ç–æ–±—ã –≤—ã–∑—ã–≤–∞—é—â–∏–π —ç—Ç—É —Ñ-—Ü–∏—é —á–µ–ª–æ–≤–µ–∫ –±—ã–ª —É–≤–µ—Ä–µ–Ω, —á—Ç–æ –≤ –º–∞—Å—Å–∏–≤ –¥–æ–±–∞–≤–∏—Ç—å—Å—è –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.


	void AppendElement(int* &arr, int& size, const int element)
	{
		// Create new array with new size
	    int* newArr = new int[size + 1];

		//Copy old array to new array
	    for (int i = 0; i < size; i++)
	    {
	        newArr[i] = arr[i]; // last cell is still empty
		}

	    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
	    newArr[size] = element;

		size++;

	    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Å—Ç–∞—Ä—ã–π –º–∞—Å—Å–∏–≤
	    delete[] arr;

		arr = newArr;
	}

	int main()
	{
		int size = 5;
		int* arr_1 = new int[size] { 1, 2, 3, 4, 5 };

		int newElement = 6;

		AppendElement(arr_1, size, newElement);
		AppendElement(arr_1, size, 10);
		AppendElement(arr_1, size, 96);
		AppendElement(arr_1, size, 960);
		AppendElement(arr_1, size, -100);

		ShowArray(arr_1, size);

	}

üîç –ü–æ—á–µ–º—É int* &arr —Ä–∞–±–æ—Ç–∞–µ—Ç?
int* &arr –æ–∑–Ω–∞—á–∞–µ—Ç "—Å—Å—ã–ª–∫–∞ –Ω–∞ —É–∫–∞–∑–∞—Ç–µ–ª—å". –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑–º–µ–Ω–∏—Ç—å —Å–∞–º —É–∫–∞–∑–∞—Ç–µ–ª—å, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –ø–æ –∞–¥—Ä–µ—Å—É:

int* arr - –∫–æ–ø–∏—è —É–∫–∞–∑–∞—Ç–µ–ª—è (–º–µ–Ω—è–µ–º –∫–æ–ø–∏—é)
int* &arr - —Å—Å—ã–ª–∫–∞ –Ω–∞ —É–∫–∞–∑–∞—Ç–µ–ª—å (–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª!)

–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏:
‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –Ω–µ—Ç —Ä–∏—Å–∫–∞ –∑–∞–±—ã—Ç—å –∑–∞–ø–∏—Å–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
‚úÖ –ü—Ä–æ—Å—Ç–æ—Ç–∞: –æ–¥–∏–Ω –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—Å—Ç—å: size –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Å–∞–º
‚úÖ –ó–∞—â–∏—Ç–∞: const int element –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –Ω–µ–∏–∑–º–µ–Ω–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª—è–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è



–≠—Ç–æ –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Ä–∞–±–æ—Ç—ã —Ñ-—Ü–∏–∏ Append, –µ—â–µ –±–æ–ª–µ–µ —Ö–æ—Ä–æ—à–∏–º –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –µ–µ —à–∞–±–ª–æ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç, –Ω–æ —ç—Ç–æ –í—ã —Å–¥–µ–ª–∞–µ—Ç–µ —É–∂–µ —Å–∞–º–∏ =)

–ï—Å–ª–∏ –±—ã —É –Ω–∞—Å –Ω–µ –±—ã–ª–æ —Å—Å—ã–ª–æ–∫, –∞ –±—ã–ª–∏ –±—ã —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞—Ç–µ–ª–∏, —Ç–æ –≤–æ—Ç –∫–∞–∫ –±—ã —Å –Ω–∏–º–∏ —Ä–∞–±–æ—Ç–∞–ª–∏:


	void AppendElement(int** arr, int& size, const int element)
	{
		// Create new array with new size
	    int* newArr = new int[size + 1];

		//Copy old array to new array
	    for (int i = 0; i < size; i++)
	    {
	        newArr[i] = (*arr)[i]; // last cell is still empty
		}

	    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
	    newArr[size] = element;

		size++;

	    // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º —Å—Ç–∞—Ä—ã–π –º–∞—Å—Å–∏–≤
	    delete[] * arr;

		*arr = newArr;
	}

	int main()
	{
		int size = 5;
		int* arr_1 = new int[size] { 1, 2, 3, 4, 5 };

		int newElement = 6;

		AppendElement(&arr_1, size, newElement);
		AppendElement(&arr_1, size, 10);
		AppendElement(&arr_1, size, 96);
		AppendElement(&arr_1, size, 960);
		AppendElement(&arr_1, size, -100);

		ShowArray(arr_1, size);

	}

üéØ –í–∞—à–∏–º –¥–æ–º–∞—à–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ–º –±—É–¥–µ—Ç —Å–æ–∑–¥–∞—Ç—å —Ñ-—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –≤\–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π. –¢–∞–∫–∂–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏–Ω–¥–µ–∫—Å–æ–≤ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –∏ –≤—Å—Ç–∞–≤–∫–æ–π. –ù–∞–ø—Ä–∏–º–µ—Ä –≤ –º–∞—Å—Å–∏–≤–µ –∏–∑ 10—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ–ª—å–∑—è –≤—Å—Ç–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ 15—É—é –ø–æ–∑–∏—Ü–∏—é. –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ª–æ–≥–∏–∫–∞ —Ç–∞–∫–∞—è –∂–µ 