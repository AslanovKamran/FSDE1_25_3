üîç –í –¥–∞–Ω–Ω–æ–º —É—Ä–æ–∫–µ –ø–æ–π–¥–µ—Ç —Ä–µ—á—å –æ–± –∞–ª–≥–æ—Ä–∏—Ç–º–∞—Ö –ø–æ–∏—Å–∫–∞ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏. –í—ã, –Ω–∞–≤–µ—Ä–Ω—è–∫–∞, —É–∂–µ —É—Å–ø–µ–ª–∏ —Å—Ç–æ–ª–∫–Ω—É—Ç—å—Å—è —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å—é —É–ø–æ—Ä—è–¥–æ—á–∏—Ç—å —Å–≤–æ–π –º–∞—Å—Å–∏–≤ –∏–ª–∏ –±—ã—Å—Ç—Ä–æ –Ω–∞–π—Ç–∏ –≤ –Ω–µ–º –∫–∞–∫–∏–µ-—Ç–æ –¥–∞–Ω–Ω—ã–µ. C–µ–≥–æ–¥–Ω—è –º—ã –ø–æ–ø—ã—Ç–∞–µ–º—Å—è –ø–æ–º–æ—á—å –≤–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã. 

–î–ª—è –Ω–∞—á–∞–ª–∞, –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –Ω–∞–∏–±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö ‚Äî –ª–∏–Ω–µ–π–Ω—ã–π –ø–æ–∏—Å–∫.

–°—É—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–∞—Å—Å–∏–≤–∞ –∏ –∏—Ö —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –Ω–∞—à–∏–º —ç–ª–µ–º–µ–Ω—Ç–∞–æ–º –ø–æ–∏—Å–∫–∞. –î–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–º - —Ç.–µ. —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ–≥—É—Ç —Ä–∞—Å–ø–æ–ª–∞–≥–∞—Ç—å—Å—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∏–ª–∏ —É–±—ã–≤–∞–Ω–∏—é, —Ç–∞–∫ –∏ —Ä–∞–∑–±—Ä–æ—Å–∞–Ω–Ω—ã–º–∏ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º–æ–∂–µ—Ç —Å–ª–æ–∂–∏—Ç—å—Å—è —Å–∏—Ç—É–∞—Ü–∏—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç—ã—Å–∫–∏–≤–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ–∫–∞–∂–µ—Ç—Å—è

    –ø–µ—Ä–≤—ã–º
    –ø–æ—Å–ª–µ–¥–Ω–∏–º
    –∏–ª–∏ –≥–¥–µ-—Ç–æ –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –º–∞—Å—Å–∏–≤–∞.

–î–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º—ã–º –ø—Ä–æ—Å—Ç—ã–º –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏, –æ–¥–Ω–∞–∫–æ –æ–Ω –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–∞–∑—ã –¥–æ–ª—å—à–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤.

–î–æ–ø—É—Å—Ç–∏–º —É –Ω–∞—Å –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª

    5 8 3 0 6 9 3 

–ò –∏—Å–∫–æ–º—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –∑–¥–µ—Å—å —è–≤–ª—è–µ—Ç—Å—è 0 

–ë—É–¥—É—á–∏ —á–µ–ª–æ–≤–µ–∫–æ–º, –º—ã —Å –≤–∞–º–∏ —Å—Ä–∞–∑—É –º–æ–∂–µ–º –∑–∞–º–µ—Ç–∏—Ç—å, —á—Ç–æ –æ–Ω –Ω–∞ 3–µ–º –º–µ—Å—Ç–µ, –Ω–æ —É –º–∞—à–∏–Ω—ã –≥–ª–∞–∑ –Ω–µ—Ç –∏ –Ω–∞–º –Ω—É–∂–Ω–æ –µ–µ –∫–∞–∫-—Ç–æ –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞—Ç—å. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –Ω–∞–º –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞ –∏ –ø–æ —à–∞–≥—É –∏–¥—Ç–∏ –¥–æ –µ–µ –∫–æ–Ω—Ü–∞, –≤ —Å–ª—É—á–∞–µ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Ü–∏–∫–ª –º–æ–∂–Ω–æ –ø—Ä–µ—Ä–≤–∞—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ. –í–æ—Ç —Ç–∞–∫ —ç—Ç–æ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –ø—Ä–æ–≥—Ä–∞–º–Ω–æ.

    int linearSerch(int arr[], int arraySize, int target) 
    {
    	for (int i = 0; i < arraySize; i++)
    	{
    		if (arr[i] == target) 
    		{
    			cout << "Target found at index: " << i << endl;
    			return arr[i];
    		}
    	}
    	cout << "Target not found in the array." << endl;
    	return -1; // Return -1 if target is not found
    }

    int main()
    {
        int arr[] = { 5,6,8,0,7,-9,2 };
        int target = 8;
    
    	const int arraySize = sizeof(arr) / sizeof(arr[0]);

    	int result = linearSerch(arr, arraySize, target);
    	cout << "Result = " << result;

    	return 0;
    }


–ï—Å—Ç—å –ø–∞—Ä—É –Ω—å—é–∞–Ω—Å–æ–≤:

‚úÖ –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º –º–∞—Å—Å–∏–≤–æ–º (–Ω–µ –≤–∞–∂–Ω—ã —Ä–∞–∑–º–µ—Ä—ã –∏ –ø–æ—Ä—è–¥–æ–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–µ–º)

‚ùå –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Å–∫–æ—Ä–æ—Å—Ç–∏: –µ—Å–ª–∏ —ç–µ–ª–µ–º–µ–Ω—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≥–¥–µ-—Ç–æ –≤ –∫–æ–Ω—Ü–µ –º–∞—Å—Å–∏–≤–∞, —Ç–æ –¥–ª—è –µ–≥–æ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –ø—Ä–∏–¥–µ—Ç—Å—è –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –¥–æ –Ω–µ–≥–æ



üéØ –†–∞—Å—Å–º–æ—Ç—Ä–∏–º —Ç–µ–ø–µ—Ä—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ –∏ –¥–ª—è —á–µ–≥–æ –æ–Ω–∏ –Ω—É–∂–Ω—ã.
–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–µ–ª–∞–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ - –ø—Ä–∏–Ω–∏–º–∞–µ–∏ –Ω–∞ –≤—Ö–æ–¥ –º–∞—Å—Å–∏–≤ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∞—Å—Å–∏–≤–∞ –≤ —Ä–∞–Ω–¥–æ–º–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –∞ –Ω–∞ –≤—ã—Ö–æ–¥–µ –¥–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –ª–∏–±–æ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –ª–∏–±–æ —É–±—ã–≤–∞–Ω–∏—é.
–ò–¥–µ—è –ª—é–±–æ–π —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –ø—Ä–æ—Å—Ç–æ–º –æ–±–º–µ–Ω–µ –∑–Ω–∞—á–µ–Ω–∏–π 2—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –¢–∞–∫ –Ω–∞–ø—Ä–∏–º–µ—Ä –º—ã —Å –≤–∞–º–∏ —É–∂–µ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–ª–∏ –∑–∞–¥–∞—á–∏ –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ –º–µ–∂–¥—É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏. –ï—Å–ª–∏ a < b —Ç–æ –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –∏—Ö –º–µ—Å—Ç–∞–º–∏. –ù–æ –µ—Å–ª–∏ —è —Å–¥–µ–ª–∞—é —Ç–∞–∫:

    a = 10;
    b = 15;

    a = b;
    b = a;

–í –æ–±–æ–∏—Ö —Å–ª—É—á–∞—è—Ö —è –ø–æ–ª—É—á—É 15, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ –ø—Ä–µ–≤–æ–º —à–∞–≥–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —è –ø–æ—Ç–µ—Ä—è—é –∑–Ω–∞—á–µ–Ω–∏–µ a. –†–µ—à–µ–Ω–∏–µ —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–Ω–∞—á–µ–Ω–∏—è a –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –∫–æ—Ç–æ—Ä–æ—è –æ–±—ã—á–Ω–æ –Ω–∞–∑–≤–∞–µ—Ç—Å—è temp.

    int a = 10;
    int b = 15;

    int temp = a;

    a = b;
    b = temp;

    cout << "a "<< a << endl;
    cout << "b "<< b << endl;

–î–∞–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è swap.

–ü–æ–ª—É—á–∞–µ—Ç—Å—è, —á—Ç–æ –µ—Å–ª–∏ —è –±—É–¥—É –ø—Ä–∏–º–µ–Ω—è—Ç—å swap –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º –º–∞—Å—Å–∏–≤–∞ (–ø—Ä–∏ –∫–∞–∫–æ–º —Ç–æ —É—Å–ª–æ–≤–∏–∏) —Ç–æ —è –ø–æ–ª—É—á—É –Ω–∞ –≤—ã—Ö–æ–¥–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤. –ü—Ä–æ–≤–µ—Ä–∏–º —ç—Ç–æ –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ —Å–∞–º–æ–≥–æ –±–∞–∑–æ–≤–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è buble sort

üí≠ –ß—Ç–æ–±—ã —Å—Ä–∞–≤–Ω–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ, –Ω–∞–¥–æ –æ—á–µ–≤–∏–¥–Ω–æ –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –Ω–µ–º—É —Ü–∏–∫–ª–æ–º. –°—É—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ —Å–∞–º—ã–π —Å—Ç–∞—Ä—à–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Ü–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏ –∫–∞–∫ –±—ã –≤—Å–ø–ª—ã–≤–µ—Ç –Ω–∞ —Å–∞–º—ã–π –≤–≤–µ—Ä—Ö, –≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞. –í –æ—Ç–ª–∏—á–∏–µ –æ—Ç –≤—Å–µ—Ö –≤—Å–µ—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ä–∞–±–æ—Ç —Å —Ü–∏–∫–ª–∞–º–∏ –º—ã –Ω–∞—á–Ω–µ–º –Ω–µ —Å –ø–µ—Ä–≤–æ–≥–æ –∞ —Å–æ –≤—Ç–æ—Ä–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –º—ã –±—É–¥–µ–º —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º. –°–º–æ—Ç—Ä–∏–º

   üëá     üëá
    5      3       8       4       1   
   i-1     i

–ò —Ç–µ–ø–µ—Ä—å –µ—Å–ª–∏ —É –Ω–∞—Å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç –±–æ–ª—å—à–µ —á–µ–º –ø–æ—Å–ª–µ–¥—É—é—â–∏–π —Ç–æ –º—ã –ø—Ä–∏–º–µ–Ω–∏–º –∫ –Ω–∏–º swap. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –≤–æ—Ç –≤—Å–µ —à–∞–≥–∏ –Ω–∞—à–µ–≥–æ —Ü–∏–∫–ª–∞–º–∏

–ò—Å—Ö–æ–¥–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ

   üëá     üëá
    5      3       8       4       1   
   i-1     i

i = 1

           üëá     üëá
    3      5       8       4       1   
          i-1      i

i = 2 

                  üëá     üëá
    3      5       8       4       1   
                  i-1      i

i = 3

                           üëá      üëá
    3      5       4       8       1   
                          i-1      i

i = 4

                           üëá     üëá
    3      5       4       1       8   


üë©‚Äçüéì –î–∞–≤–∞–π—Ç–µ —Ç–µ–ø–µ—Ä—å –∑–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ–º —ç—Ç–æ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –µ–≥–æ —Ä–∞–±–æ—Ç—É –≤ debug-e

    const int Size = 5;
    int arr[Size] = { 5,3,8,4,1 };

    for(int i = 1; i < Size; i++)
    {
    	cout << "Iteration " << i;
    	if(arr[i-1]>arr[i])
    	{
    		//swap
    		int temp = arr[i-1];
    		arr[i-1] = arr[i];
    		arr[i] = temp;
    	}
    }


üí° –í–∞–∂–Ω–æ –∑–∞–º–µ—Ç–∏—Ç—å: –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ—Ö–æ–¥–∞ –ø–æ –º–∞—Å—Å–∏–≤—É —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–∑–∏—Ü–∏–∏. –ù–æ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –µ—â—ë –Ω–µ –∑–∞–∫–æ–Ω—á–µ–Ω–∞ ‚Äî –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –≤—Å—ë –µ—â—ë –º–æ–≥—É—Ç —Å—Ç–æ—è—Ç—å –Ω–µ –Ω–∞ —Å–≤–æ–∏—Ö –º–µ—Å—Ç–∞—Ö.

–ü–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —ç—Ç—É –ø—Ä–æ—Ü–µ–¥—É—Ä—É —Å–Ω–æ–≤–∞, –Ω–æ —É–∂–µ –Ω–µ –¥–æ—Ö–æ–¥—è –¥–æ –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞ (—Ç–∞–∫ –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ –Ω–∞ —Å–≤–æ—ë–º –º–µ—Å—Ç–µ).
–ó–Ω–∞—á–∏—Ç, –Ω–∞–º –Ω—É–∂–µ–Ω –≤–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –∑–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ö–æ–¥–æ–≤.

    const int Size = 5;
    int arr[Size] = { 5,3,8,4,1 };

    for (int i = 0; i < Size; i++)
    {
    	for (int j = 1; j < Size; j++)
    	{
    		if (arr[j - 1] > arr[j])
    		{
    			//swap
    			int temp = arr[j - 1];
    			arr[j - 1] = arr[j];
    			arr[j] = temp;
    		}
    	}
    }

    for(int i =0 ; i < Size; i++)
    {
    	cout << arr[i] << " ";
    }

–ó–¥–µ—Å—å –º—ã —Å–æ–≤–µ—Ä—à–∞–µ–º –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –ª–∏—à–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –æ—Ç –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞–¥–æ –∏–∑–±–∞–≤–∏—Ç—å—Å—è. –ú–æ–∂–Ω–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –∫–æ–ª-–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π –≤–Ω–µ—à–Ω–µ–≥–æ —Ü–∏–∫–ª–∞ –∏ –≤–æ—Ç –ø–æ—á–µ–º—É:

–í–æ–∑—å–º—ë–º —Ö—É–¥—à–∏–π —Å–ª—É—á–∞–π: –º–∞—Å—Å–∏–≤ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
    
    5 4 3 2 1

–ù–∞ –ø–µ—Ä–≤–æ–º –ø—Ä–æ—Ö–æ–¥–µ —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç (5) "–≤—Å–ø–ª—ã–≤–∞–µ—Ç" –≤ –∫–æ–Ω–µ—Ü.

–ù–∞ –≤—Ç–æ—Ä–æ–º –ø—Ä–æ—Ö–æ–¥–µ 4 –æ–∫–∞–∂–µ—Ç—Å—è –Ω–∞ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–µ–º –º–µ—Å—Ç–µ.

–ò —Ç–∞–∫ –¥–∞–ª–µ–µ.

–ö–æ–≥–¥–∞ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤—Å–µ–≥–æ –¥–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–∞, –æ–¥–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ö–≤–∞—Ç–∏—Ç, —á—Ç–æ–±—ã –∏—Ö –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å.
üëâ –°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø—Ä–æ—Ö–æ–¥–æ–≤ = Size-1.
–ü–æ—Å–ª–µ–¥–Ω–∏–π (Size-–π) –ø—Ä–æ—Ö–æ–¥ –±—ã–ª –±—ã –ø—É—Å—Ç–æ–π —Ç—Ä–∞—Ç–æ–π –≤—Ä–µ–º–µ–Ω–∏.

–°–ª–µ–¥—É—é—â–∏–π –º–æ–º–µ–Ω—Ç: —Ç–∞–∫ –∫–∞–∫ –Ω–∞ –∫–∞–∂–¥–æ–º –ø—Ä–æ—Ö–æ–¥–µ –≤–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞ –≤—Å—Ç–∞–ª —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π –∏–∑ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –º–æ–∂–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª-–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∏ –Ω–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –±–æ–ª—å—à–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –≤—Å—Ç–∞–≤—à–∏–µ –Ω–∞ —Å–≤–æ–∏ –º–µ—Å—Ç–∞

–ò–∑–Ω–∞—á–∞–ª—å–Ω–æ:  [5, 3, 8, 4, 1]

–ü–æ—Å–ª–µ 1-–≥–æ –ø—Ä–æ—Ö–æ–¥–∞: [3, 5, 4, 1, 8]   ‚Üí 8 –Ω–∞ —Å–≤–æ—ë–º –º–µ—Å—Ç–µ
–ü–æ—Å–ª–µ 2-–≥–æ –ø—Ä–æ—Ö–æ–¥–∞: [3, 4, 1, 5, 8]   ‚Üí 5 —Ç–æ–∂–µ –Ω–∞ –º–µ—Å—Ç–µ
–ü–æ—Å–ª–µ 3-–≥–æ –ø—Ä–æ—Ö–æ–¥–∞: [3, 1, 4, 5, 8]   ‚Üí 4 –Ω–∞ –º–µ—Å—Ç–µ
–ü–æ—Å–ª–µ 4-–≥–æ –ø—Ä–æ—Ö–æ–¥–∞: [1, 3, 4, 5, 8]   ‚Üí –≤—Å—ë –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ


    const int Size = 10;
    int arr[Size] = { 5,3,8,4,1 };
    int iterations = 0;
    
    for (int i = 0; i < Size -1; i++)
    {
    
    	for (int j = 1; j < Size - i; j++)
    	{
    		iterations++;
    		if (arr[j - 1] > arr[j])
    		{
    			//swap
    			int temp = arr[j - 1];
    			arr[j - 1] = arr[j];
    			arr[j] = temp;
    		}
    	}
    }
    
    cout << "Number of iterations: " << iterations << endl;
    
    for(int i =0 ; i < Size; i++)
    {
    	cout << arr[i] << " ";
    }

üë®‚Äçüè´ –†–∞—Å—Å–º–æ—Ç—Ä–∏–º —Ç–µ–ø–µ—Ä—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –≤—ã–±–æ—Ä–æ–º - Selection sort. –û–Ω –æ—á–µ–Ω—å –ø–æ—Ö–æ–∂ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º –∏ —Ü–µ–ª—å –µ–≥–æ —Ç–∞–∫–æ–≤–∞: –ü–æ –æ—á–µ—Ä–µ–¥–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –∏ –µ—Å–ª–∏ –∫–∞–∫–æ–π-—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –º–µ–Ω—å—à–µ —á–µ–º –æ–Ω —Ç–æ –ø—Ä–∏—Ä–∞–≤–Ω—è—Ç—å –∫ —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∞–Ω–Ω—ã–π –∏–Ω–¥–µ–∫—Å. –ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–¥–∞ –ø–æ –ø–µ—Ä–≤–æ–º—É —Ü–∏–∫–ª—É –Ω—É–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–∑–º–µ–Ω–∏–æ—Å—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π minInde - –µ—Å–ª–∏ –¥–∞, —Ç–æ –Ω–∞—à–µ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–µ—Ä–≤–µ–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—à–∏–±–æ—á–Ω—ã–º –∏ –Ω—É–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ –≤ –º–∞—Å—Å–∏–≤–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º i –∏ j. –°–ª–µ–¥—É—é—â–∏–π —Ü–∏–∫–ª –∂–µ —É–∂–µ –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å —Å–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞. –¢–∞–∫ –∫–∞–∫ –ø–µ—Ä–≤—ã–π –ø—Ä–æ—Ö–æ–¥ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –Ω–∞–º —Ç–æ, —á—Ç–æ —Å–∞–º—ã–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤—Å—Ç–∞–Ω–µ—Ç –Ω–∞ —Å–≤–æ–µ –º–µ—Å—Ç–æ –≤ –Ω–∞—á–∞–ª–µ –º–∞—Å—Å–∏–≤–∞. –¢–∞–∫–∂–µ –Ω—É–∂–Ω–æ —É—á–∏—Ç—ã–≤–∞—Ç—å, —á—Ç–æ —É–∂–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —á–∞—Å—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Ç —Å–º—ã—Å–ª–∞, –ø–æ —ç—Ç–æ–º—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å i + 1. –ö–æ–¥ –∂–µ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º:

    const int Size = 5;
    int arr[Size] = { 5,3,8,4,1 };

    for (int i = 0; i < Size - 1; i++) 
    {
    	int minIndex = i;
    	for (int j = i + 1; j < Size; j++) 
    	{
    		if (arr[j] < arr[minIndex]) 
    		{
    			minIndex = j;
    		}
    	}
    	if (minIndex != i) 
    	{
    		cout << "Swapping " << arr[i] << " and " << arr[minIndex] << endl;
    		int temp = arr[i];
    		arr[i] = arr[minIndex];
    		arr[minIndex] = temp;	
    	}
    }


üëΩ –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –Ω–∞–≥–ª—è–¥–Ω–æ —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —ç—Ç–∏–º–∏ –¥–≤—É–º—è –∞–ª–≥–æ—Ä–∏—Ç–º–∞–º–∏.

üîπ Bubble Sort (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø—É–∑—ã—Ä—å–∫–æ–º)

–ü—Ä–∏–Ω—Ü–∏–ø:

    –ú—ã —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–∞–∂–¥—É—é —Å–æ—Å–µ–¥–Ω—é—é –ø–∞—Ä—É –∏ ¬´–≤—ã—Ç–∞–ª–∫–∏–≤–∞–µ–º¬ª —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü.

    –ö–∞–∫ –º—ã–ª—å–Ω—ã–µ –ø—É–∑—ã—Ä–∏ –≤—Å–ø–ª—ã–≤–∞—é—Ç –≤–≤–µ—Ä—Ö, —Ç–∞–∫ –∏ –±–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞ ¬´–≤—Å–ø–ª—ã–≤–∞—é—Ç¬ª –≤ –∫–æ–Ω–µ—Ü.

    –î–ª—è —ç—Ç–æ–≥–æ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–Ω–æ–≥–æ —Ä–∞–∑ –ø–µ—Ä–µ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è.

üëâ –ü—Ä–æ–±–ª–µ–º–∞:

    –î–∞–∂–µ –µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø–æ—á—Ç–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω, –ø—É–∑—ã—Ä—å–∫—É –≤—Å—ë —Ä–∞–≤–Ω–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –º–Ω–æ–≥–æ –¥–≤–∏–≥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã.

üîπ Selection Sort (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≤—ã–±–æ—Ä–æ–º)

–ü—Ä–∏–Ω—Ü–∏–ø:

    –ù–∞—Ö–æ–¥–∏–º —Å–∞–º—ã–π –º–∞–ª–µ–Ω—å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç –∏ —Å—Ç–∞–≤–∏–º –µ–≥–æ –Ω–∞ —Å–≤–æ—ë –º–µ—Å—Ç–æ.

    –ü–æ—Ç–æ–º –∏—â–µ–º –≤—Ç–æ—Ä–æ–π –ø–æ –≤–µ–ª–∏—á–∏–Ω–µ –∏ —Å—Ç–∞–≤–∏–º –µ–≥–æ –Ω–∞ –≤—Ç–æ—Ä–æ–µ –º–µ—Å—Ç–æ.

    –ò —Ç–∞–∫ –¥–∞–ª–µ–µ.

    –ó–¥–µ—Å—å –º—ã –ø–æ—á—Ç–∏ –Ω–µ –¥–≤–∏–≥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ–±–º–µ–Ω –≤ –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏.

üëâ –û—Ç–ª–∏—á–∏–µ:

    –°—Ä–∞–≤–Ω–µ–Ω–∏–π –æ–±–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –¥–µ–ª–∞—é—Ç –º–Ω–æ–≥–æ, –Ω–æ –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–æ–∫ —É Selection Sort –≥–æ—Ä–∞–∑–¥–æ –º–µ–Ω—å—à–µ.

–ù–∞ —ç—Ç–æ–º –æ—Å—Ç–∞–Ω–æ–≤–∏–º—Å—è —Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–æ–∫. –°–ª–µ–¥—É–µ—Ç –æ—Ç–º–µ—Ç–∏—Ç—å, —á—Ç–æ –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ –≤ 99% —Å–ª—É—á–∞–µ–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —É–∂–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤ —è–∑—ã–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ Quick Sort –∏ –µ–º—É –ø–æ–¥–æ–±–Ω—ã–µ. –û–¥–Ω–∞–∫–æ –≤—Å–µ —Ç–∏–ø—ã –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–∞—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –æ–ø—Ä–µ–¥–µ–ª–Ω–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö. 

üë©‚Äçüéì –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Å—Ç–æ –Ω–∞ –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ Quick Sort, Merge sort –∏ –Ω–∞ –∏—Ö —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã


üìå –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –ø–æ–∏—Å–∫–∞. –ù–∞–∑—ã–≤–∞–º—ã–µ–π –±–∏–Ω–∞—Ä–Ω—ã–º - Binary Search. –°—Ä–∞–∑—É –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –º–∞–ª–µ–Ω—å–∫—É—é –æ–≥–æ–≤–æ—Ä–∫—É, –¥–∞–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –º–∞—Å—Å–∏–≤–∞–º–∏ –≤ –≤–æ–∑—Ä–∞—Å—Ç–∞—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ [1,2,3,4,5,6,7,8,9,10]

–ü—Ä–∏–Ω—Ü–∏–ø –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ 3–µ—Ö —É–∫–∞–∑–∞—Ç–µ–ª—è—Ö Left Right –∏ Mid. 

–ü—É—Å—Ç—å —É –Ω–∞—Å –±—É–¥–µ—Ç –º–∞—Å—Å–∏–≤ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–∏–¥–∞:

    [1, 3, 5, 7, 9, 11, 13]

–ò –Ω–∞–º –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –Ω–µ–º —á–∏—Å–ª–æ 9.

–ù–∞ —Å–∞–º–æ–º –ø–µ—Ä–≤–æ–º —à–∞–≥–µ —É –Ω–∞—Å –ø–æ–∫–∞ –µ—â–µ –Ω–µ—Ç —É–∫–∞–∑–∞—Ç–µ–ª–µ–π. –î–∞–≤–∞–π—Ç–µ –∏—Ö —Å—Ä–∞–∑—É —Ä–∞—Å—Å—Ç–∞–≤–∏–º. –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ Left = 0, Right = Array Size - 1 –∞ Mid = (Left + Right)/2

–í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ 

    Left = 0;
    Right = 6;
    Mid = (6 + 0)/2 = 3

üí° –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –±—É–¥—É—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –º–µ–Ω—è—Ç—å—Å—è –ø–æ —Ö–æ–¥—É –ø—Ä–æ–≥—Ä–∞–º–º—ã.

–ß—Ç–æ –º—ã –¥–µ–ª–∞–µ–º: –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ç—ã–∫–∞–µ–º –≤ —Å–µ—Ä–µ–¥–∏–Ω—É –º–∞—Å—Å–∏–≤–∞. –ò —Å–º–æ—Ç—Ä–∏–º –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–∞–º. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —ç—Ç–æ arr[3] = 7. –ò —Ç—É—Ç –º—ã –∑–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã:

1. –≠—Ç–æ –∏—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç? –ï—Å–ª–∏ –¥–∞ —Ç–æ –ø–æ–∏—Å–∫ –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è –∏ –º—ã –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Ñ-—Ü–∏–∏.
2. –ï—Å–ª–∏ –Ω–µ—Ç - —Ç–æ –∑–∞–¥–∞–µ–º –µ—â–µ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å: –ò—Å–∫–æ–º—ã–π –ø—Ä–µ–¥–º–µ—Ç –±–æ–ª—å—à–µ –∏–ª–∏ –º–µ–Ω—å—à–µ —Å–µ—Ä–µ–¥–∏–Ω–Ω–æ–≥–æ. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –∏—Å–∫–æ–º—ã–π = 9 –∞ —Å–µ—Ä–µ–¥–∏–Ω–∞ = 7. –¢.–µ. –∏—Å–∫–æ–º—ã–π –±–æ–ª—å—à–µ. –¢–æ–≥–¥–∞ –Ω–µ—Ç —Å–º—ã—Å–ª–∞ –∏—Å–∫–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç Left –¥–æ Mid (–ò–º–µ–Ω–Ω–æ –ø–æ —ç—Ç–æ–º—É –º–∞—Å—Å–∏–≤ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω, —á—Ç–æ–±—ã –º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ –º–æ–≥–ª–∏ –æ—Ç–±—Ä–æ—Å–∏—Ç—å –µ–≥–æ –ø–æ–ª–æ–≤–∏–Ω—É). –ò —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ª–µ–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É –º–æ–∂–Ω–æ —Å–¥–≤–∏–Ω—É—Ç—å –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã. –¢.–µ. –¥–µ–ª–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏

Right = 6 (–º—ã –µ–≥–æ –Ω–µ —Ç—Ä–æ–≥–∞–µ–º)
Left = Mid + 1  (3 + 1 = 4); (–°–≤–¥–∏–Ω—É–ª–∏ –ª–µ–≤—ã–π —É–∫–∞–∑–∞—Ç–µ–ª–± –Ω–∞ –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ)
Mid = (Left + Right)/2  = 5

–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º —É –Ω–∞—Å

Left = 4;
Right = 6;
Mid = 5;

–ò –º—ã —Å–Ω–æ–≤–∞ –¥–µ–ª–∞–µ–º —Ç–æ –∂–µ —Å–∞–º–æ–µ. –¢—ã–∫–∞–µ–º –≤ —Å–µ—Ä–µ–¥–∏–Ω—É –º–∞—Å—Å–∏–≤–∞ –∏ –∑–∞–¥–∞–µ–º —Ç–µ –∂–µ –≤–æ–ø—Ä–æ—Å—ã. –ó–¥–µ—Å—å –ø–æ–ª—É—á–∏–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é –∏ –∫–∞–∫ —Ä–∞–∑ —Ç–∞–∫–∏ –ø–æ–π–º–µ–º –≤ –∫–∞–∫–æ–π –º–æ–º–µ–Ω—Ç –Ω–∞–º –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è.

1. –≠—Ç–æ –∏—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç - –Ω–µ—Ç. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è
2. –ò—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–µ–Ω—å—à–µ —á–µ–º arr[mid]. –¢–æ–≥–¥–∞ –º—ã –¥–æ–ª–∂–Ω—ã –æ—Å—Ç–∞–≤–∏—Ç—å Left –Ω–∞ –º–µ—Å—Ç–µ, –∞ Right —Å–¥–≤–∏–Ω—É—Ç—å –¥–æ Mid - 1.

–¢–æ–≥–¥–∞

Left = 4;
Right = 5 - 1 = 4;
Mid = (4 + 4)/2

–ö–∞–∫ –≤–∏–¥–∏–º, –≤—Å–µ 3 —É–∫–∞–∑–∞—Ç–µ–ª—è —Ä–∞–≤–Ω—ã 4. –ò —ç—Ç–æ –Ω–∞—à –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç. –ö–æ–≥–¥–∞ Left –∏ Right —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —ç–ª–µ–º–µ–Ω—Ç, —Ç–æ —É –Ω–∞—Å –æ—Å—Ç–∞—ë—Ç—Å—è —Ä–æ–≤–Ω–æ –æ–¥–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å: –ª–∏–±–æ —ç—Ç–æ –∏—Å–∫–æ–º–æ–µ —á–∏—Å–ª–æ, –ª–∏–±–æ –µ–≥–æ –Ω–µ—Ç –≤ –º–∞—Å—Å–∏–≤–µ. –ù–æ –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –Ω–∞–º –ø–æ–≤–µ–∑–ª–æ –∏ –º—ã –Ω–∞—à–ª–∏ –µ–≥–æ –ø–æ –∏–Ω–¥–µ–∫—Å—É 4. –ù–∞ –ø–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ –º—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ 3 –∏—Ç–µ—Ä–∞—Ü–∏–∏, —á—Ç–æ –Ω–∞ 2 –º–µ–Ω—å—à–µ, —á–µ–º –µ—Å–ª–∏ –±—ã –º—ã –ø—Ä–æ—à–ª–∏—Å—å –ª–∏–Ω–µ–π–Ω—ã–º –ø–æ–∏—Å–∫–æ–º. –≠—Ç–æ –∏ –µ—Å—Ç—å –º–∞–≥–∏—è –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ ‚Äî –æ–Ω –¥–µ–ª–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –ø–æ–ø–æ–ª–∞–º –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ. –ß–µ–º –±–æ–ª—å—à–µ –º–∞—Å—Å–∏–≤, —Ç–µ–º —Å–∏–ª—å–Ω–µ–µ –æ—â—É—â–∞–µ—Ç—Å—è –≤—ã–∏–≥—Ä—ã—à.


üíÅ‚Äç‚ôÇÔ∏è –ù–∞–ø–∏—à–µ–º –∫–ª–∞—Å—Å–∏—á–µ—Å–∫—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –Ω–∞ C++. –î–∞–Ω–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –≤–µ—Ä–µ–Ω—Ç –∏–Ω–¥–µ–∫—Å –∏—Å–∫–æ–º–æ–≥–æ —ç–ª–µ–∏–º–µ–Ω—Ç–∞, –µ—Å–ª–∏ –æ–Ω —Ç–∞–º –µ—Å—Ç—å, –∏–Ω–µ—á–µ –≤–µ—Ä–Ω–µ—Ç -1.


    int binarySearch(int arr[], int size, int target)
    {
    	int left = 0;
    	int right = size - 1;
    	while (left <= right)
    	{
    		int mid = (left + right) / 2;
    		if (arr[mid] == target)
    		{
    			return mid; // Element found
    		}
    		else if (target > arr[mid])
    		{
    			left = mid + 1; // Search in the right half
    		}
    		else if (target < arr[mid])
    		{
    			right = mid - 1; // Search in the left half
    		}
    	}
    	return -1; // Element not found
    }

    int main()
    {
    	int arr[] = { 1, 3, 5, 7, 9, 11, 13 };
    	int size = sizeof(arr) / sizeof(arr[0]);
    	int target = 9;

    	int indexOfTarget = binarySearch(arr, size, target);
    	if (indexOfTarget == -1)
    	{
    		cout << "Element not found in the array." << endl;
    	}
    	else
    	{
    		cout << "Index of target (" << target << ") is: " << indexOfTarget << endl;
    	}
    	return 0;
    }


–ò —Ç–µ–ø–µ—Ä—å –¥–∞–∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–≤—É—Ö —Ñ-—Ü–∏–π:


    int binarySearch(int arr[], int size, int target)
    {
    	int left = 0;
    	int right = size - 1;

    	int iterations = 0;
    	while (left <= right)
    	{
    		iterations++;
    		int mid = (left + right) / 2;
    		if (arr[mid] == target)
    		{
    			cout << "Number of iterations: " << iterations << endl;
    			return mid; // Element found
    		}
    		else if (target > arr[mid])
    		{
    			left = mid + 1; // Search in the right half
    		}
    		else if (target < arr[mid])
    		{
    			right = mid - 1; // Search in the left half
    		}
    	}
    	cout << "Number of iterations: " << iterations << endl;
    	return -1; // Element not found
    }

    int linearSearch(int arr[], int size, int target)
    {
    	int iterations = 0;
    	for (int i = 0; i < size; i++)
    	{
    		iterations++;
    		if (arr[i] == target)
    		{
    			cout << "Number of iterations: " << iterations << endl;
    			return i; // Element found
    		}
    	}
    	cout << "Number of iterations: " << iterations << endl;
    	return -1; // Element not found
    }

    int main()
    {
    	int arr[] = { 1, 1, 15, 38, 39, 76, 83, 100, 109, 109,
    		126, 130, 140, 184, 192, 194, 215, 216, 246, 249,
    		254, 263, 304, 307, 331, 338, 346, 346, 347, 376,
    		380, 381, 382, 384, 392, 395, 396, 404, 413, 428,
    		428, 429, 436, 438, 441, 462, 467, 477, 479, 479,
    		482, 487, 496, 498, 501, 505, 524, 532, 533, 552,
    		554, 564, 590, 636, 640, 650, 656, 662, 664, 706,
    		718, 719, 732, 734, 734, 736, 742, 746, 747, 762,
    		763, 771, 772, 785, 789, 829, 857, 873, 875, 895,
    		917, 943, 950, 957, 957, 963, 967, 992, 995, 1000 };


    	int size = sizeof(arr) / sizeof(arr[0]);
    	int target = 875;

    	int indexOfTargetInBinary = binarySearch(arr, size, target);
    	if (indexOfTargetInBinary == -1)
    	{
    		cout << "Element not found in the array." << endl;
    	}
    	else
    	{
    		cout << "Index of target (" << target << ") is: " << indexOfTargetInBinary << endl;
    	}

    	cout << "=======================================================" << endl;

    	int indexOfTargetInLinear = linearSearch(arr, size, target);
    	if (indexOfTargetInLinear == -1)
    	{
    		cout << "Element not found in the array." << endl;
    	}
    	else
    	{
    		cout << "Index of target (" << target << ") is: " << indexOfTargetInLinear << endl;
    	}
    	return 0;
    }


üí° –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ—Å—á–∏—Ç–∞—Ç—å –∑–∞ —Å–∫–æ–ª—å–∫–æ –º–∞–∫—Å–∏–º—É–º –∏—Ç–µ—Ä–∞—Ü–∏–π —è –Ω–∞–π–¥—É –∏—Å–∫–æ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–ª–æ–≤–∞—Ç—å—Å—è —Ñ–æ—Ä–º—É–ª–æ–π

max¬†steps=‚åàlog2‚Äã(n)‚åâ