üßë‚Äçüíª –°–µ–≥–æ–¥–Ω—è –±—É–¥–µ–º —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —É–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ —Ñ-—Ü–∏—é. –ó–≤—É—á–∏—Ç —Å—Ç—Ä–∞—à–Ω–æ, –Ω–æ –≤ –∫—É—Ä—Å–µ –ø–∞–π—Ç–æ–Ω–∞ –º—ã —Å –≤–∞–º–∏ —ç—Ç–æ —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏. –í –ø–∞–π—Ç–æ–Ω–µ —è –º–æ–≥ –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Ñ-—Ü–∏–∏ –¥—Ä—É–≥—É—é —Ñ-—Ü–∏—é. –≠—Ç–æ —å—ã–ª–æ –≤–æ–∑–º–æ–∂–Ω–æ –≤ –ø–∞–π—Ç–æ–Ω–µ –ø–æ—Ç–æ–º—É, —á—Ç–æ –≤ –ø–∞–π—Ç–æ–Ω–µ –≤—Å–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º. –î–∞–∂–µ —Ñ-—Ü–∏–∏. –í –°++ —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π —Ñ-—Ü–∏–æ–Ω–∞–ª, –Ω–æ —á—É—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É, –∞ –∏–º–µ–Ω–Ω–æ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª–∏ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏.

üí° –ò—Å–ø–æ–ª—å–∑—É—è —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ñ-—Ü–∏—é —è –≥—Ä—É–±–æ –≥–æ–≤–æ—Ä—è –º–æ–≥—É —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ-—Ü–∏—é –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é. –ê –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–∞–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ —É–≥–æ–¥–Ω–æ, –∏ –¥–∞–∂–µ –ø–µ—Ä–µ–¥–∞—Ç—å –≤ –¥—Ä—É–≥—É—é —Ñ-—Ü–∏—é. –í –û–û–ü –¥–∞–Ω–Ω–∞—è –∫–æ–Ω—Ü–µ–ø—Ü–∏—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–µ–ª–µ–≥–∞—Ç–∞–º–∏. –ò –≤ –°# –µ—Å—Ç—å –¥–∞–∂–µ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤ —Å–µ–±–µ —Ö—Ä–∞–Ω–∏—Ç—å —Ñ-—Ü–∏–∏.

üß† –ü–µ—Ä–µ–π–¥–µ–º –∫ –ø—Ä–∞–∫—Ç–∏–∫–µ. –û–±—â–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Ç–∞–∫–æ–≤:

    <return type> (*pointer) (parameters list)

–î–∞–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —á–µ–º —Ç–æ —Å—Ö–æ–∂ —Å –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞–º–∏. –ü–æ —Å—É—Ç–∏ —Ç–∞–∫–æ–π –≤–æ—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ñ-—Ü–∏—é —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ —Å–∏–≥–Ω–∞—Ç—É—Ä—É, –∏ –∏–º–µ–Ω–Ω–æ —Ñ-—Ü–∏–∏ —Å —Ç–∞–∫–æ–π —Å–∏–≥–Ω–∞—Ç—É—Ä–æ–π –º—ã –º–æ–∂–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ —Ç–∞–∫–æ–º—É —É–∫–∞–∑–∞—Ç–µ–ª—é 

–ü–µ—Ä–µ–π–¥–µ–º –∫ –ø—Ä–∏–º–µ—Ä–∞–º. –ò —Å–æ–∑–¥–∞–¥–∏–º —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ñ-—Ü–∏—é —Ç–∏–ø–∞ void, –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä—ã.

    int main()
    {
        void (*FunctionPointer)();
    }

–ò —Ç–µ–ø–µ—Ä—å –º—ã —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—ã–µ —Ñ-—Ü–∏–∏ —Å—Ö–æ–∂–∏–µ  –ø–æ —Å–∏–≥–Ω–∞—Ç—É—Ä–µ.

    void Test1()
    {   
        cout <<"Test one was called" <<endl;
    }

    void Test2()
    {   
        cout <<"Test two was called" <<endl;
    }

üß© –ò —Ç–µ–ø–µ—Ä—å –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫ —ç—Ç–∏ —Ñ-—Ü–∏–∏ –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å. –ù—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤–∑—è—Ç—å –∏ –ø—Ä–∏—Å–≤–æ–∏—Ç—å –∂–µ–ª–∞–µ–º—É—é —Ñ-—Ü–∏—é –Ω–∞—à–µ–º—É —É–∫–∞–∑–∞—Ç–µ–ª—é. –ì–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã —Å–æ–≤–ø–∞–¥–∞–ª–∏ —Å–∏–≥–Ω–∞—Ç—É—Ä—ã —É–∫–∞–∑–∞—Ç–µ–ª—è –∏ —Å–∞–º–æ–π —Ñ-—Ü–∏–∏.

    int main()
    {
        void (*FunctionPointer)();
        FunctionPointer = Test1;
        FunctionPointer();
    }

–ò –Ω–∞ —ç–∫—Ä–∞–Ω–µ —è —É–≤–∏–∂—É —Ç–µ–ª–æ —Ñ-—Ü–∏–∏ Test1, —Ö–æ—Ç—è —è –Ω–∞–ø—Ä—è–º—É—é –µ–µ –Ω–∏–≥–¥–µ –≤ main-e –Ω–µ –≤—ã–∑—ã–≤–∞—é. –ï—Å–ª–∏ —è —Å–¥–µ–ª–∞—é —Ç–∞–∫

    int main()
    {
        void (*FunctionPointer)();
        FunctionPointer = Test2;
        FunctionPointer();
    }

–¢–æ —Ç–µ–ø–µ—Ä—å –º–æ–π —É–∫–∞–∑–∞—Ç–µ–ª—å —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ 2—É—é —Ñ-—Ü–∏—é.

‚ö†Ô∏è –¢–∞–∫–∏–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º—É, —á—Ç–æ —Å–∏–≥–Ω–∞—Ç—É—Ä—ã —É–∫–∞–∑–∞—Ç–µ–ª—è –∏ —Å–∞–º–∏—Ö —Ñ-—Ü–∏–π —Å–æ–≤–ø–∞–¥–∞—é—Ç. –ï—Å–ª–∏ –∏–∑–º–µ–Ω—Ç—å —Å–∏–≥–Ω–∞—Ç—É—Ä—É Test2

    void Test2(int num)
    {   
        cout <<"Test two was called" <<endl;
    }

–¢–æ –¥–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ—á–∫–∞ –Ω–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç—Å—è.

    FunctionPointer = Test2;   ‚ùå 

üßë‚Äçüíª –î–∞–≤–∞–π—Ç–µ —Ç–µ–ø–µ—Ä—å –ø–æ–∏–≥—Ä–∞–µ–º—Å—è —Å —Å–∏–≥–Ω–∞—Ç—É—Ä–∞–º–∏ –∏ –∏–∑–º–µ–Ω–∏–º –Ω–∞—à–∏ Test —Ñ-—Ü–∏–∏ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º:

    int Decrease(int a)
    {
        return --a;
    }

    int Increase(int a)
    {
        return ++a;
    }

–ò —Ç–µ–ø–µ—Ä—å –Ω–∞—à —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ñ-—Ü–∏—é –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã—à–µ –æ–ø–∏—Å–∞–Ω—ã–º —Ñ-—Ü–∏—è–º. –ü–æ—ç—Ç–æ–º—É –∏–∑–º–µ–Ω–∏–º –∏ –µ–≥–æ

    int (*FunctionPointer)(int); // –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–∂–Ω–æ –æ–ø—É—Å–∫–∞—Ç—å
    FunctionPointer = Decrease;

    int delegate = FunctionPointer(5);
    cout << "Decreased result: " << delegate << endl;

–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–ª—å–∑—ã –æ—Ç —ç—Ç–æ–≥–æ –Ω–µ –æ—á–µ–Ω—å –º–Ω–æ–≥–æ, —Ç–∞–∫ –∫–∞–∫ —Å —Ç–∞–∫–∏–º –∂–µ —É—Å–ø–µ—Ö–æ–º —è –±—ã –º–æ–≥ –Ω–∞–ø—Ä—è–º—É—é –≤—ã–∑–≤–∞—Ç—å —Å–∞–º—É —Ñ-—Ü–∏—é Decrease. –í—Å—è —Å—É—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥–∞—Ç—å —Ñ-—Ü—É—é –≤ –¥—Ä—É–≥—É—é –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, —Ç–∞–∫ –∫–∞–∫ –º—ã —É–∂–µ –Ω–∞—É—á–∏–ª–∏—Å—å –∏—Ö —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.

üß© –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ. –î–æ–ø—É—Å—Ç–∏–º —É –Ω–∞—Å –µ—Å—Ç—å —Ñ-—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞. –ì–¥–µ –ø—Ä–æ—Ü–µ—Å—Å —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —ç—Ç–æ —Ç–∞–∫–∂–µ –æ—Ç–¥–µ–ª—å–Ω–∞—è —Ñ-—Ü–∏—è.

    string GetDataFromTxt()
    {
       return "John Doe (From txt file)";         
    }

    void ShowInfo()
    {
        string data;
        data = GetDataFromTxt();
        cout<<data;
    }

–í—Å–µ –≤—Ä–æ–¥–µ –±—ã —Ö–æ—Ä–æ—à–æ, –Ω–æ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –Ω–∞–º –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–µ —Ç–æ–ª—å–∫–æ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞, –Ω–æ –∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –¢–æ–≥–¥–∞ –Ω–∞–º –Ω—É–∂–Ω–∞ –±—É–¥–µ—Ç –µ—â–µ –æ–¥–Ω–∞ —Ñ-—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è.

    string GetDataFromDataBase()
    {
        return "John Doe (From database)";         
    }

‚ùî –ê —á—Ç–æ —Ç–µ–ø–µ—Ä—å –¥–µ–ª–∞—Ç—å —Å —Ñ-—Ü–∏–µ–π ShowInfo, –∫–∞–∫ –Ω–∞—É—á–∏—Ç—å –µ–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –∫–µ–π—Å–æ–≤. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ç—É–¥–∞ –±—É–ª–µ–≤—Å–∫–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä, —Ç–∏–ø–∞ isFromDB, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –º–Ω–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —Ç—É –∏–ª–∏ –∏–Ω—É—é —Ñ-—Ü–∏—é.

    string GetDataFromTxt()
    {
       return "John Doe (From txt file)";         
    }

    string GetDataFromDataBase()
    {
        return "John Doe (From database)";         
    }

    void ShowInfo(bool isFromDb = false)
    {
        string data;
        
        if (isFromDb)
        {
            data = GetDataFromDataBase();
            cout << data;
            return;            
        }

        data = GetDataFromTxt();
        cout << data;
    }

üß† –û–∫–µ–π, –ø—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞, –Ω–æ —á—Ç–æ –µ—Å–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –∏–ª–∏ –∏–∑ –≤–µ–± —Å–µ—Ä–≤–µ—Ä–∞, –∏–ª–∏ –∏–∑ –¥—Ä—É–≥–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞. –¢–æ–≥–¥–∞ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤. –í–º–µ—Å—Ç–æ bool –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∫–∞–∫–æ–π-—Ç–æ enum –∏ –≤ —Ç–µ–ª–µ ShowInfo –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å switch –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ñ-—Ü–∏–∏. –û–¥–Ω–∞–∫–æ –∏ –∑–¥–µ—Å—å –µ—Å—Ç—å —Ä—è–¥ —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π. –ù–∞ –∫–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥–Ω–æ–π —Ñ-—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —è –¥–æ–ª–∂–µ–Ω –±—É–¥—É —Ç–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–π enum –∏ –Ω–æ–≤—ã–π case –≤ switch-e. 

üí° –†–µ—à–µ–Ω–∏–µ–º —è–≤–ª—è–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–∞ —Ñ-—Ü–∏—é. –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —ç—Ç–æ–≥–æ ShowInfo —Ñ-—Ü–∏–∏ –±—É–¥–µ—Ç –±–µ–∑ —Ä–∞–∑–Ω–∏—Ü—ã –æ—Ç–∫—É–¥–∞ —á–∏—Ç–∞—é—Ç—Å—è –¥–∞–Ω–Ω—ã–µ. –õ–∏—à—å –±—ã —Å–∏–≥–Ω–∞—Ç—É—Ä–∞ —Å–æ–≤–ø–∞–¥–∞–ª–∞.

–ú—ã –º–æ–∂–µ–º –ø—Ä–∏–Ω—è—Ç—å –≤ —Ñ-—Ü–∏—é —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ —Ñ-—Ü–∏—é —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º:

    void ShowInfo(string (*function)())
    {
        string data = function();     
        cout<< data;
    }

–ò —Ç–µ–ø–µ—Ä—å –≤ —ç—Ç—É —Ñ-—Ü–∏—é –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ª—é–±—É—é —Ñ-—Ü–∏—é, –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–æ —Å–∏–≥–Ω–∞—Ç—É—Ä–µ: –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è string.



    string GetDataFromTxt()
    {
        return "John Doe (From txt file)";
    }

    string GetDataFromDataBase()
    {
        return "John Doe (From database)";
    }

    string GetDataFromWeb()
    {
        return "John Doe (From web server)";
    }

    string GetDataFromVoice()
    {
        return "John Doe (From voice recorder)";
    }

    void ShowInfo(string(*function)()) 
    {
        string result = function();
        cout << result << endl;

    }

    int main()
    {
        string (*FunctionPointer)();
        FunctionPointer = GetDataFromDataBase;
        ShowInfo(FunctionPointer);
    }